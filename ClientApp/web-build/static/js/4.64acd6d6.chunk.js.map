{"version":3,"sources":["index.tsx","NavigationBuilderContext.tsx","NavigationRouteContext.tsx","NavigationContext.tsx","node_modules/nanoid/non-secure/index.js","useNavigation.tsx","BaseRouter.tsx","NavigationStateContext.tsx","types.tsx","DefaultTheme.tsx","StackRouter.tsx","TabRouter.tsx","EnsureSingleNavigator.tsx","CurrentRenderContext.tsx","index.js","LinkingContext.tsx","node_modules/color/index.js","useLinkProps.tsx","useLinkTo.tsx","node_modules/react-native-iphone-x-helper/index.js","useBackButton.tsx","ThemeProvider.tsx","ServerContext.tsx","useLinking.tsx","CommonActions.tsx","BaseNavigationContainer.tsx","UnhandledActionContext.tsx","useScheduleUpdate.tsx","useChildListeners.tsx","useKeyedChildListeners.tsx","useOptionsGetters.tsx","useEventEmitter.tsx","createNavigatorFactory.tsx","Screen.tsx","NavigationHelpersContext.tsx","useRouteCache.tsx","useRoute.tsx","useFocusEffect.tsx","getStateFromPath.tsx","node_modules/query-string/index.js","checkLegacyPathConfig.tsx","getPathFromState.tsx","getActionFromState.tsx","getFocusedRouteNameFromRoute.tsx","useTheme.tsx","ThemeContext.tsx","useLinkBuilder.tsx","node_modules/color-convert/conversions.js","Link.tsx","StaticContainer.tsx","SceneView.tsx","useDescriptors.tsx","useNavigationCache.tsx","useNavigationHelpers.tsx","useOnPreventRemove.tsx","useOnAction.tsx","isArrayEqual.tsx","useNavigationBuilder.tsx","useRegisterNavigator.tsx","useFocusEvents.tsx","useOnRouteFocus.tsx","useFocusedListenersChildrenAdapter.tsx","useOnGetState.tsx","useCurrentRender.tsx","NavigationContainer.tsx","useDocumentTitle.tsx","useThenable.tsx","useSyncState.tsx","node_modules/@react-navigation/core/node_modules/escape-string-regexp/index.js","node_modules/strict-uri-encode/index.js","node_modules/decode-uri-component/index.js","node_modules/split-on-first/index.js","node_modules/filter-obj/index.js","node_modules/color-string/index.js","node_modules/color-name/index.js","node_modules/simple-swizzle/index.js","node_modules/is-arrayish/index.js","node_modules/color-convert/index.js","node_modules/color-convert/node_modules/color-name/index.js","node_modules/color-convert/route.js","InitialWindow.ts","SafeAreaProviderCompat.tsx","ResourceSavingScene.tsx","Badge.tsx","TabBarIcon.tsx","BottomTabItem.tsx","BottomTabBarHeightCallbackContext.tsx","BottomTabBar.tsx","useWindowDimensions.tsx","useIsKeyboardShown.tsx","BottomTabBarHeightContext.tsx","BottomTabView.tsx","createBottomTabNavigator.tsx","NativeSafeAreaProvider.tsx","SafeAreaContext.tsx"],"names":["NavigationBuilderContext","onDispatchAction","onOptionsChange","NavigationContext","React","nanoid","size","id","i","Math","random","useNavigation","navigation","BaseRouter","getStateForAction","action","index","state","r","routes","params","nextState","route","name","key","shouldActionChangeFocus","MISSING_CONTEXT_ERROR","isDefault","dark","colors","primary","background","card","text","border","notification","StackActions","replace","type","payload","push","pop","count","popToTop","StackRouter","options","router","getInitialState","routeParamList","initialRouteName","routeNames","stale","getRehydratedState","getStateForRouteNamesChange","getStateForRouteFocus","getId","target","source","actionCreators","TabActions","jumpTo","getRouteHistory","history","initialRouteIndex","changeIndex","backBehavior","currentKey","it","TabRouter","undefined","previousKey","SingleNavigatorContext","EnsureSingleNavigator","children","navigatorKeyRef","value","register","unregister","CurrentRenderContext","ENABLE_SCREENS","enableScreens","shouldEnableScreens","screensEnabled","render","this","enabled","rest","style","display","Screen","Animated","ScreenContainer","NativeScreenContainer","LinkingContext","colorString","convert","_slice","slice","skippedModels","hashedModelKeys","Object","keys","forEach","model","call","labels","sort","join","limiters","Color","obj","Error","channels","color","valpha","result","get","length","newArr","zeroArray","splice","indexOf","alpha","hashedKeys","JSON","stringify","limit","max","min","freeze","getset","channel","modifier","Array","isArray","m","val","arguments","maxfn","v","assertArray","arr","prototype","toString","string","toJSON","places","self","to","rgb","args","round","concat","percentString","percent","array","object","unitArray","unitObject","g","b","map","num","Number","toFixed","roundTo","roundToPlace","red","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","l","a","keyword","hex","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","ratio","hsl","darken","saturate","desaturate","whiten","hwb","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","w","w1","w2","newAlpha","raw","module","exports","useLinkProps","linkTo","useLinkTo","href","accessibilityRole","onPress","e","shouldHandle","Platform","String","linking","path","getStateFromPath","root","current","getActionFromState","isIphoneX","dimen","Dimensions","OS","isPad","isTVOS","height","width","getStatusBarHeight","safe","select","ios","iphoneXStyle","regularStyle","android","StatusBar","currentHeight","default","getBottomSpace","useBackButton","subscription","ref","ThemeProvider","createMemoryHistory","items","pending","interrupt","cb","window","item","backIndex","go","n","done","interrupted","clearTimeout","reject","title","resolve","timer","setTimeout","onPopState","last","listen","listener","findMatchingState","aHistoryLength","bHistoryLength","aRoute","bRoute","aChildState","bChildState","isUsingLinking","useLinking","getPathFromState","getActionFromStateDefault","enabledRef","configRef","getStateFromPathRef","getActionFromStateRef","getPathFromStateRef","server","location","thenable","then","Promise","onfulfilled","catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","previousIndex","record","rootState","console","handling","queue","callback","async","series","previousState","pendingPath","previousFocusedState","historyDelta","focusedState","nextIndex","currentIndex","goBack","navigate","reset","setParams","NOT_INITIALIZED_ERROR","set","BaseNavigationContainer","useSyncState","getPartialState","initialState","isFirstMountRef","getKey","setKey","useChildListeners","addListener","useKeyedChildListeners","addKeyedListener","dispatch","listeners","canGoBack","handled","resetRoot","keyedListeners","CommonActions","getRootState","getCurrentRoute","emitter","useEventEmitter","useOptionsGetters","getCurrentOptions","acc","dangerouslyGetState","dangerouslyGetParent","data","noop","lastEmittedOptionsRef","builderContext","scheduleContext","scheduleUpdate","flushUpdates","isInitialRef","getIsInitial","context","getState","setState","addOptionsGetter","onStateChangeRef","defaultOnUnhandledAction","element","onUnhandledAction","UnhandledActionContext","ScheduleUpdateContext","useScheduleUpdate","focus","beforeRemove","optionsRef","optionsGettersFromChildRef","parentAddOptionsGetter","optionsChangeListener","isFocused","hasChildren","getOptionsFromListener","optionsFromListener","listenRef","create","removeListener","callbacks","emit","canPreventDefault","t","event","enumerable","defaultPrevented","preventDefault","createNavigatorFactory","Navigator","NavigationHelpersContext","SUPPRESS_STATE_ACCESS_WARNING","useRouteCache","Map","checkLegacyPathConfig","initialRoutes","compatOptions","connectedRoutes","screens","remaining","decodeURIComponent","parseQueryParams","createNestedStateObject","configs","createNormalizedConfigs","aParts","bParts","aWildcardIndex","bWildcardIndex","config","match","c","legacy","matchAgainstConfigs","regex","RegExp","remainingPath","segments","findFocusedRoute","findParseConfigForRoute","joinPaths","paths","matchedParams","routeConfig","pattern","parentPattern","createConfigItem","initials","nestedConfig","screen","escape","parse","routeName","findInitialRoute","createStateObject","initialRoute","nestedState","nestedStateIndex","query","queryString","parseConfig","strictUriEncode","decodeComponent","splitOnFirst","filterObject","validateArrayFormatSeparator","TypeError","encode","strict","encodeURIComponent","decode","removeHash","input","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","exec","includes","isEncodedArray","newValue","split","parserForArrayFormat","ret","param","k","reduce","Boolean","keysSorter","shouldFilter","skipNull","skipEmptyString","encoderForArrayFormat","objectCopy","filter","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","getHash","pick","exclude","exclusionFilter","allParams","focusedParams","focusedRoute","getActiveRoute","currentOptions","nestedRouteNames","hasNext","currentParams","fromEntries","getParamName","nextRoute","entries","normalizedConfig","createNormalizedConfigItem","initial","useTheme","ThemeContext","useLinkBuilder","getRootStateForNavigate","parent","parentState","cssKeywords","reverseKeywords","hasOwnProperty","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","defineProperty","h","delta","rdif","gdif","bdif","s","diff","diffc","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","t1","t2","t3","smin","lmin","hi","floor","f","q","sl","vmin","wh","bl","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","ansi","mult","rem","toUpperCase","substring","char","integer","parseInt","mg","pure","Link","props","web","onClick","prevPropKeys","nextPropKeys","prevProps","nextProps","SceneView","getCurrentState","currentRoute","setCurrentState","child","ScreenComponent","NavigationStateContext","useDescriptors","onAction","onRouteFocus","navigations","cache","actions","previous","helpers","setOptions","o","useNavigationCache","routeOptions","screenOptions","NavigationRouteContext","routeState","PrivateValueStore","VISITED_ROUTE_KEYS","Symbol","shouldPreventRemove","nextRouteKeys","nextRoutes","removedRoutes","currentRoutes","visitedRouteKeys","beforeRemoveAction","beforeRemoveListeners","useOnAction","routerConfigOptionsRef","visitedNavigators","isPrevented","onRouteFocusParent","shouldFocus","onActionParent","actionListeners","routeKey","useOnPreventRemove","addListenerParent","isArrayEqual","useNavigationBuilder","navigatorKey","container","useRegisterNavigator","createRouter","routeConfigs","getRouteConfigsFromChildren","initialParams","initialParamsFromParams","routeGetIdList","isStateValid","isStateInitialized","currentState","previousNestedParamsRef","previousParams","updatedState","shouldUpdate","initializedStateRef","descriptors","lastFocusedKeyRef","currentFocusedKey","lastFocusedKey","useFocusEvents","childListeners","routerConfigOptions","sourceRouteKey","useOnRouteFocus","parentNavigationHelpers","op","useNavigationHelpers","focusedListeners","useFocusedListenersChildrenAdapter","getStateListeners","childState","useOnGetState","useCurrentRender","NavigationContainer","theme","fallback","isLinkingEnabled","refContainer","document","useDocumentTitle","promise","cancelled","useThenable","prefixes","linkingContext","isReady","onReadyRef","UNINTIALIZED_STATE","stateRef","isSchedulingRef","isMountedRef","setTrackingState","trackingState","str","charCodeAt","singleMatcher","multiMatcher","decodeComponents","components","err","left","right","tokens","encodedURI","replaceMap","customDecodeURIComponent","separator","separatorIndex","predicate","isArr","colorNames","swizzle","reverseNames","cs","clamp","hexDouble","hexAlpha","i2","parseFloat","rgba","hsla","hwba","isArrayish","results","len","arg","wrap","fn","Function","getOwnPropertyDescriptor","constructor","conversions","fromModel","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","adjacents","adjacent","node","unshift","link","from","wrapConversion","cur","initialWindowSafeAreaInsets","initialSafeAreaInsets","top","bottom","SafeAreaProviderCompat","insets","ResourceSavingScene","activityState","isVisible","active","hidden","styles","pointerEvents","collapsable","removeClippedSubviews","detached","StyleSheet","flex","overflow","attached","Badge","visible","toValue","duration","useNativeDriver","finished","setRendered","opacity","backgroundColor","restStyle","textColor","borderRadius","fontSize","numberOfLines","transform","scale","inputRange","outputRange","lineHeight","minWidth","alignSelf","textAlign","paddingHorizontal","TabBarIcon","horizontal","activeOpacity","renderIcon","focused","activeTintColor","inactiveOpacity","inactiveTintColor","badge","icon","position","alignItems","justifyContent","iconVertical","iconHorizontal","marginTop","badgeVertical","badgeHorizontal","BottomTabBarItem","button","activeBackgroundColor","inactiveBackgroundColor","showLabel","customActiveTintColor","customInactiveTintColor","scene","onLongPress","testID","accessibilityLabel","accessibilityState","selected","accessibilityStates","badgeStyle","iconStyle","label","allowFontScaling","renderLabel","tab","tabPortrait","flexDirection","tabLandscape","labelBeneath","labelBeside","marginLeft","shouldUseHorizontalLabels","adaptive","tabStyle","labelPosition","layout","maxTabItemWidth","flattenedStyle","dimensions","getPaddingBottom","getTabBarHeight","customHeight","isLandscape","horizontalLabels","paddingBottom","BottomTabBar","keyboardHidesTabBar","buildLink","focusedOptions","onChange","setDimensions","d","useWindowDimensions","isKeyboardShown","handleKeyboardShow","setIsKeyboardShown","handleKeyboardHide","Keyboard","useIsKeyboardShown","onHeightChange","shouldShowTabBar","visibilityAnimationConfigRef","visibilityAnimationConfig","animation","setIsTabBarHidden","defaultInsets","useSafeArea","safeAreaInsets","tabBarHeight","hasHorizontalLabels","borderTopColor","translateY","isTabBarHidden","onLayout","topBorderWidth","setLayout","labelStyle","tabBar","borderTopWidth","elevation","content","SceneContent","accessibilityElementsHidden","importantForAccessibility","tabBarOptions","loaded","detachInactiveScreens","sceneContainerStyle","descriptor","unmountOnBlur","lazy","BottomTabBarHeightContext","BottomTabBarHeightCallbackContext","handleTabBarHeightChange","focusedRouteKey","prevState","BottomTabView","CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","NativeSafeAreaView","onInsetsChange","getInset","createContextElement","onEnd","paddingRight","paddingTop","paddingLeft","frame","offsetHeight","nativeEvent","getSupportedTransitionEvent","_supportedTransitionEvent","_supportedEnv","side","CSS","getSupportedEnv","SafeAreaInsetsContext","SafeAreaFrameContext","SafeAreaProvider","parentInsets","parentFrame","initialMetrics","nextInsets","nextFrame","setFrame","setInsets","fill","safeArea","useSafeAreaInsets","SafeAreaConsumer"],"mappings":"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","file":"static/js/4.64acd6d6.chunk.js","sourcesContent":["import * as CommonActions from './CommonActions';\n\nexport { CommonActions };\n\nexport { default as BaseRouter } from './BaseRouter';\n\nexport { default as StackRouter, StackActions } from './StackRouter';\n\nexport type {\n  StackActionHelpers,\n  StackActionType,\n  StackRouterOptions,\n  StackNavigationState,\n} from './StackRouter';\n\nexport { default as TabRouter, TabActions } from './TabRouter';\n\nexport type {\n  TabActionHelpers,\n  TabActionType,\n  TabRouterOptions,\n  TabNavigationState,\n} from './TabRouter';\n\nexport { default as DrawerRouter, DrawerActions } from './DrawerRouter';\n\nexport type {\n  DrawerActionHelpers,\n  DrawerActionType,\n  DrawerRouterOptions,\n  DrawerNavigationState,\n} from './DrawerRouter';\n\nexport * from './types';\n","import * as React from 'react';\nimport type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n} from '@react-navigation/routers';\nimport type { NavigationHelpers } from './types';\n\nexport type ListenerMap = {\n  action: ChildActionListener;\n  focus: FocusedNavigationListener;\n};\n\nexport type KeyedListenerMap = {\n  getState: GetStateListener;\n  beforeRemove: ChildBeforeRemoveListener;\n};\n\nexport type AddListener = <T extends keyof ListenerMap>(\n  type: T,\n  listener: ListenerMap[T]\n) => void;\n\nexport type AddKeyedListener = <T extends keyof KeyedListenerMap>(\n  type: T,\n  key: string,\n  listener: KeyedListenerMap[T]\n) => void;\n\nexport type ChildActionListener = (\n  action: NavigationAction,\n  visitedNavigators?: Set<string>\n) => boolean;\n\nexport type FocusedNavigationCallback<T> = (\n  navigation: NavigationHelpers<ParamListBase>\n) => T;\n\nexport type FocusedNavigationListener = <T>(\n  callback: FocusedNavigationCallback<T>\n) => { handled: boolean; result: T };\n\nexport type GetStateListener = () => NavigationState;\n\nexport type ChildBeforeRemoveListener = (action: NavigationAction) => boolean;\n\n/**\n * Context which holds the required helpers needed to build nested navigators.\n */\nconst NavigationBuilderContext = React.createContext<{\n  onAction?: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  addListener?: AddListener;\n  addKeyedListener?: AddKeyedListener;\n  onRouteFocus?: (key: string) => void;\n  onDispatchAction: (action: NavigationAction, noop: boolean) => void;\n  onOptionsChange: (options: object) => void;\n}>({\n  onDispatchAction: () => undefined,\n  onOptionsChange: () => undefined,\n});\n\nexport default NavigationBuilderContext;\n","import * as React from 'react';\nimport type { Route } from '@react-navigation/routers';\n\n/**\n * Context which holds the route prop for a screen.\n */\nconst NavigationContext = React.createContext<Route<string> | undefined>(\n  undefined\n);\n\nexport default NavigationContext;\n","import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport type { NavigationProp } from './types';\n\n/**\n * Context which holds the navigation prop for a screen.\n */\nconst NavigationContext = React.createContext<\n  NavigationProp<ParamListBase, string, any, any> | undefined\n>(undefined);\n\nexport default NavigationContext;\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport type { NavigationProp } from './types';\n\n/**\n * Hook to access the navigation prop of the parent screen anywhere.\n *\n * @returns Navigation prop of the parent screen.\n */\nexport default function useNavigation<\n  T extends NavigationProp<ParamListBase>\n>(): T {\n  const navigation = React.useContext(NavigationContext);\n\n  if (navigation === undefined) {\n    throw new Error(\n      \"Couldn't find a navigation object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return navigation as T;\n}\n","import { nanoid } from 'nanoid/non-secure';\nimport type {\n  CommonNavigationAction,\n  NavigationState,\n  PartialState,\n} from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex((r) => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET': {\n        const nextState = action.payload as State | PartialState<State>;\n\n        if (\n          nextState.routes.length === 0 ||\n          nextState.routes.some(\n            (route: { name: string }) => !state.routeNames.includes(route.name)\n          )\n        ) {\n          return null;\n        }\n\n        if (nextState.stale === false) {\n          if (\n            state.routeNames.length !== nextState.routeNames.length ||\n            nextState.routeNames.some(\n              (name) => !state.routeNames.includes(name)\n            )\n          ) {\n            return null;\n          }\n\n          return {\n            ...nextState,\n            routes: nextState.routes.map((route) =>\n              route.key ? route : { ...route, key: `${route.name}-${nanoid()}` }\n            ),\n          };\n        }\n\n        return nextState;\n      }\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n","import * as React from 'react';\nimport type { NavigationState, PartialState } from '@react-navigation/routers';\n\nconst MISSING_CONTEXT_ERROR =\n  \"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";\n\nexport default React.createContext<{\n  isDefault?: true;\n  state?: NavigationState | PartialState<NavigationState>;\n  getKey: () => string | undefined;\n  setKey: (key: string) => void;\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\n  setState: (\n    state: NavigationState | PartialState<NavigationState> | undefined\n  ) => void;\n  getIsInitial: () => boolean;\n  addOptionsGetter?: (\n    key: string,\n    getter: () => object | undefined | null\n  ) => void;\n}>({\n  isDefault: true,\n\n  get getKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getIsInitial(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n","import type * as React from 'react';\nimport type {\n  DefaultRouterOptions,\n  NavigationState,\n  NavigationAction,\n  InitialState,\n  PartialState,\n  Route,\n  ParamListBase,\n} from '@react-navigation/routers';\n\nexport type DefaultNavigatorOptions<\n  ScreenOptions extends {},\n  ParamList extends ParamListBase = ParamListBase\n> = DefaultRouterOptions<Extract<keyof ParamList, string>> & {\n  /**\n   * Children React Elements to extract the route configuration from.\n   * Only `Screen` components are supported as children.\n   */\n  children: React.ReactNode;\n  /**\n   * Default options for all screens under this navigator.\n   */\n  screenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList, keyof ParamList>;\n        navigation: any;\n      }) => ScreenOptions);\n};\n\nexport type EventMapBase = Record<\n  string,\n  { data?: any; canPreventDefault?: boolean }\n>;\n\nexport type EventMapCore<State extends NavigationState> = {\n  focus: { data: undefined };\n  blur: { data: undefined };\n  state: { data: { state: State } };\n  beforeRemove: { data: { action: NavigationAction }; canPreventDefault: true };\n};\n\nexport type EventArg<\n  EventName extends string,\n  CanPreventDefault extends boolean | undefined = false,\n  Data = undefined\n> = {\n  /**\n   * Type of the event (e.g. `focus`, `blur`)\n   */\n  readonly type: EventName;\n  readonly target?: string;\n} & (CanPreventDefault extends true\n  ? {\n      /**\n       * Whether `event.preventDefault()` was called on this event object.\n       */\n      readonly defaultPrevented: boolean;\n      /**\n       * Prevent the default action which happens on this event.\n       */\n      preventDefault(): void;\n    }\n  : {}) &\n  (undefined extends Data\n    ? { readonly data?: Readonly<Data> }\n    : { readonly data: Readonly<Data> });\n\nexport type EventListenerCallback<\n  EventMap extends EventMapBase,\n  EventName extends keyof EventMap\n> = (\n  e: EventArg<\n    Extract<EventName, string>,\n    EventMap[EventName]['canPreventDefault'],\n    EventMap[EventName]['data']\n  >\n) => void;\n\nexport type EventConsumer<EventMap extends EventMapBase> = {\n  /**\n   * Subscribe to events from the parent navigator.\n   *\n   * @param type Type of the event (e.g. `focus`, `blur`)\n   * @param callback Callback listener which is executed upon receiving the event.\n   */\n  addListener<EventName extends Extract<keyof EventMap, string>>(\n    type: EventName,\n    callback: EventListenerCallback<EventMap, EventName>\n  ): () => void;\n  removeListener<EventName extends Extract<keyof EventMap, string>>(\n    type: EventName,\n    callback: EventListenerCallback<EventMap, EventName>\n  ): void;\n};\n\nexport type EventEmitter<EventMap extends EventMapBase> = {\n  /**\n   * Emit an event to child screens.\n   *\n   * @param options.type Type of the event (e.g. `focus`, `blur`)\n   * @param [options.data] Optional information regarding the event.\n   * @param [options.target] Key of the target route which should receive the event.\n   * If not specified, all routes receive the event.\n   */\n  emit<EventName extends Extract<keyof EventMap, string>>(\n    options: {\n      type: EventName;\n      target?: string;\n    } & (EventMap[EventName]['canPreventDefault'] extends true\n      ? { canPreventDefault: true }\n      : {}) &\n      (undefined extends EventMap[EventName]['data']\n        ? { data?: EventMap[EventName]['data'] }\n        : { data: EventMap[EventName]['data'] })\n  ): EventArg<\n    EventName,\n    EventMap[EventName]['canPreventDefault'],\n    EventMap[EventName]['data']\n  >;\n};\n\nexport class PrivateValueStore<A, B, C> {\n  /**\n   * UGLY HACK! DO NOT USE THE TYPE!!!\n   *\n   * TypeScript requires a type to be used to be able to infer it.\n   * The type should exist as its own without any operations such as union.\n   * So we need to figure out a way to store this type in a property.\n   * The problem with a normal property is that it shows up in intelliSense.\n   * Adding private keyword works, but the annotation is stripped away in declaration.\n   * Turns out if we use an empty string, it doesn't show up in intelliSense.\n   */\n  protected ''?: { a: A; b: B; c: C };\n}\n\ntype NavigationHelpersCommon<\n  ParamList extends ParamListBase,\n  State extends NavigationState = NavigationState\n> = {\n  /**\n   * Dispatch an action or an update function to the router.\n   * The update function will receive the current state,\n   *\n   * @param action Action object or update function.\n   */\n  dispatch(\n    action: NavigationAction | ((state: State) => NavigationAction)\n  ): void;\n\n  /**\n   * Navigate to a route in current navigation tree.\n   *\n   * @param name Name of the route to navigate to.\n   * @param [params] Params object for the route.\n   */\n  navigate<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Navigate to a route in current navigation tree.\n   *\n   * @param route Object with `key` or `name` for the route to navigate to, and a `params` object.\n   */\n  navigate<RouteName extends keyof ParamList>(\n    route:\n      | { key: string; params?: ParamList[RouteName] }\n      | { name: RouteName; key?: string; params: ParamList[RouteName] }\n  ): void;\n\n  /**\n   * Reset the navigation state to the provided state.\n   *\n   * @param state Navigation state object.\n   */\n  reset(state: PartialState<State> | State): void;\n\n  /**\n   * Go back to the previous route in history.\n   */\n  goBack(): void;\n\n  /**\n   * Check if the screen is focused. The method returns `true` if focused, `false` otherwise.\n   * Note that this method doesn't re-render screen when the focus changes. So don't use it in `render`.\n   * To get notified of focus changes, use `addListener('focus', cb)` and `addListener('blur', cb)`.\n   * To conditionally render content based on focus state, use the `useIsFocused` hook.\n   */\n  isFocused(): boolean;\n\n  /**\n   * Check if dispatching back action will be handled by navigation.\n   * Note that this method doesn't re-render screen when the result changes. So don't use it in `render`.\n   */\n  canGoBack(): boolean;\n\n  /**\n   * Returns the parent navigator, if any. Reason why the function is called\n   * dangerouslyGetParent is to warn developers against overusing it to eg. get parent\n   * of parent and other hard-to-follow patterns.\n   */\n  dangerouslyGetParent<T = NavigationProp<ParamListBase> | undefined>(): T;\n\n  /**\n   * Returns the navigator's state. Reason why the function is called\n   * dangerouslyGetState is to discourage developers to use internal navigation's state.\n   * Note that this method doesn't re-render screen when the result changes. So don't use it in `render`.\n   */\n  dangerouslyGetState(): State;\n} & PrivateValueStore<ParamList, keyof ParamList, {}>;\n\nexport type NavigationHelpers<\n  ParamList extends ParamListBase,\n  EventMap extends EventMapBase = {}\n> = NavigationHelpersCommon<ParamList> &\n  EventEmitter<EventMap> & {\n    /**\n     * Update the param object for the route.\n     * The new params will be shallow merged with the old one.\n     *\n     * @param params Params object for the current route.\n     */\n    setParams<RouteName extends keyof ParamList>(\n      params: Partial<ParamList[RouteName]>\n    ): void;\n  };\n\nexport type NavigationContainerProps = {\n  /**\n   * Initial navigation state for the child navigators.\n   */\n  initialState?: InitialState;\n  /**\n   * Callback which is called with the latest navigation state when it changes.\n   */\n  onStateChange?: (state: NavigationState | undefined) => void;\n  /**\n   * Callback which is called when an action is not handled.\n   */\n  onUnhandledAction?: (action: NavigationAction) => void;\n  /**\n   * Whether this navigation container should be independent of parent containers.\n   * If this is not set to `true`, this container cannot be nested inside another container.\n   * Setting it to `true` disconnects any children navigators from parent container.\n   */\n  independent?: boolean;\n  /**\n   * Children elements to render.\n   */\n  children: React.ReactNode;\n};\n\nexport type NavigationProp<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList = string,\n  State extends NavigationState = NavigationState<ParamList>,\n  ScreenOptions extends {} = {},\n  EventMap extends EventMapBase = {}\n> = NavigationHelpersCommon<ParamList, State> & {\n  /**\n   * Update the param object for the route.\n   * The new params will be shallow merged with the old one.\n   *\n   * @param params Params object for the current route.\n   */\n  setParams(params: Partial<ParamList[RouteName]>): void;\n\n  /**\n   * Update the options for the route.\n   * The options object will be shallow merged with default options object.\n   *\n   * @param options Options object for the route.\n   */\n  setOptions(options: Partial<ScreenOptions>): void;\n} & EventConsumer<EventMap & EventMapCore<State>> &\n  PrivateValueStore<ParamList, RouteName, EventMap>;\n\nexport type RouteProp<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList\n> = Route<Extract<RouteName, string>, ParamList[RouteName]>;\n\nexport type CompositeNavigationProp<\n  A extends NavigationProp<ParamListBase, string, any, any>,\n  B extends NavigationHelpersCommon<ParamListBase, any>\n> = Omit<A & B, keyof NavigationProp<any>> &\n  NavigationProp<\n    /**\n     * Param list from both navigation objects needs to be combined\n     * For example, we should be able to navigate to screens in both A and B\n     */\n    (A extends NavigationHelpersCommon<infer T> ? T : never) &\n      (B extends NavigationHelpersCommon<infer U> ? U : never),\n    /**\n     * The route name should refer to the route name specified in the first type\n     * Ideally it should work for any of them, but it's not possible to infer that way\n     */\n    A extends NavigationProp<any, infer R> ? R : string,\n    /**\n     * The type of state should refer to the state specified in the first type\n     */\n    A extends NavigationProp<any, any, infer S> ? S : NavigationState,\n    /**\n     * Screen options from both navigation objects needs to be combined\n     * This allows typechecking `setOptions`\n     */\n    (A extends NavigationProp<any, any, any, infer O> ? O : {}) &\n      (B extends NavigationProp<any, any, any, infer P> ? P : {}),\n    /**\n     * Event consumer config should refer to the config specified in the first type\n     * This allows typechecking `addListener`/`removeListener`\n     */\n    A extends NavigationProp<any, any, any, any, infer E> ? E : {}\n  >;\n\nexport type Descriptor<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList = string,\n  State extends NavigationState = NavigationState,\n  ScreenOptions extends {} = {},\n  EventMap extends EventMapBase = {}\n> = {\n  /**\n   * Render the component associated with this route.\n   */\n  render(): JSX.Element;\n\n  /**\n   * Options for the route.\n   */\n  options: ScreenOptions;\n\n  /**\n   * Navigation object for the screen\n   */\n  navigation: NavigationProp<\n    ParamList,\n    RouteName,\n    State,\n    ScreenOptions,\n    EventMap\n  >;\n};\n\nexport type ScreenListeners<\n  State extends NavigationState,\n  EventMap extends EventMapBase\n> = Partial<\n  {\n    [EventName in keyof (EventMap &\n      EventMapCore<State>)]: EventListenerCallback<EventMap, EventName>;\n  }\n>;\n\nexport type RouteConfig<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  /**\n   * Route name of this screen.\n   */\n  name: RouteName;\n\n  /**\n   * Navigator options for this screen.\n   */\n  options?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList, RouteName>;\n        navigation: any;\n      }) => ScreenOptions);\n\n  /**\n   * Event listeners for this screen.\n   */\n  listeners?:\n    | ScreenListeners<State, EventMap>\n    | ((props: {\n        route: RouteProp<ParamList, RouteName>;\n        navigation: any;\n      }) => ScreenListeners<State, EventMap>);\n\n  /**\n   * Function to return an unique ID for this screen.\n   * Receives an object with the route params.\n   * For a given screen name, there will always be only one screen corresponding to an ID.\n   * If `undefined` is returned, it acts same as no `getId` being specified.\n   */\n  getId?: ({ params }: { params: ParamList[RouteName] }) => string | undefined;\n\n  /**\n   * Initial params object for the route.\n   */\n  initialParams?: Partial<ParamList[RouteName]>;\n} & (\n  | {\n      /**\n       * React component to render for this screen.\n       */\n      component: React.ComponentType<any>;\n      getComponent?: never;\n      children?: never;\n    }\n  | {\n      /**\n       * Lazily get a React component to render for this screen.\n       */\n      getComponent: () => React.ComponentType<any>;\n      component?: never;\n      children?: never;\n    }\n  | {\n      /**\n       * Render callback to render content of this screen.\n       */\n      children: (props: {\n        route: RouteProp<ParamList, RouteName>;\n        navigation: any;\n      }) => React.ReactNode;\n      component?: never;\n      getComponent?: never;\n    }\n);\n\nexport type NavigationContainerEventMap = {\n  /**\n   * Event which fires when the navigation state changes.\n   */\n  state: {\n    data: {\n      /**\n       * The updated state object after the state change.\n       */\n      state: NavigationState | PartialState<NavigationState> | undefined;\n    };\n  };\n  /**\n   * Event which fires when current options changes.\n   */\n  options: { data: { options: object } };\n  /**\n   * Event which fires when an action is dispatched.\n   * Only intended for debugging purposes, don't use it for app logic.\n   * This event will be emitted before state changes have been applied.\n   */\n  __unsafe_action__: {\n    data: {\n      /**\n       * The action object which was dispatched.\n       */\n      action: NavigationAction;\n      /**\n       * Whether the action was a no-op, i.e. resulted any state changes.\n       */\n      noop: boolean;\n    };\n  };\n};\n\nexport type NavigationContainerRef = NavigationHelpers<ParamListBase> &\n  EventConsumer<NavigationContainerEventMap> & {\n    /**\n     * Reset the navigation state of the root navigator to the provided state.\n     *\n     * @param state Navigation state object.\n     */\n    resetRoot(state?: PartialState<NavigationState> | NavigationState): void;\n    /**\n     * Get the rehydrated navigation state of the navigation tree.\n     */\n    getRootState(): NavigationState;\n    /**\n     * Get the currently focused navigation route.\n     */\n    getCurrentRoute(): Route<string> | undefined;\n    /**\n     * Get the currently focused route's options.\n     */\n    getCurrentOptions(): object | undefined;\n  };\n\nexport type TypedNavigator<\n  ParamList extends ParamListBase,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n  Navigator extends React.ComponentType<any>\n> = {\n  /**\n   * Navigator component which manages the child screens.\n   */\n  Navigator: React.ComponentType<\n    Omit<\n      React.ComponentProps<Navigator>,\n      keyof DefaultNavigatorOptions<any, any>\n    > &\n      DefaultNavigatorOptions<ScreenOptions, ParamList>\n  >;\n  /**\n   * Component used for specifying route configuration.\n   */\n  Screen: <RouteName extends keyof ParamList>(\n    _: RouteConfig<ParamList, RouteName, State, ScreenOptions, EventMap>\n  ) => null;\n};\n\nexport type NavigatorScreenParams<\n  ParamList,\n  State extends NavigationState = NavigationState\n> =\n  | {\n      screen?: never;\n      params?: never;\n      initial?: never;\n      state: PartialState<State> | State | undefined;\n    }\n  | {\n      [RouteName in keyof ParamList]: undefined extends ParamList[RouteName]\n        ? {\n            screen: RouteName;\n            params?: ParamList[RouteName];\n            initial?: boolean;\n            state?: never;\n          }\n        : {\n            screen: RouteName;\n            params: ParamList[RouteName];\n            initial?: boolean;\n            state?: never;\n          };\n    }[keyof ParamList];\n\nexport type PathConfig = {\n  path?: string;\n  exact?: boolean;\n  parse?: Record<string, (value: string) => any>;\n  stringify?: Record<string, (value: any) => string>;\n  screens?: PathConfigMap;\n  initialRouteName?: string;\n};\n\nexport type PathConfigMap = {\n  [routeName: string]: string | PathConfig;\n};\n","import type { Theme } from '../types';\n\nconst DefaultTheme: Theme = {\n  dark: false,\n  colors: {\n    primary: 'rgb(0, 122, 255)',\n    background: 'rgb(242, 242, 242)',\n    card: 'rgb(255, 255, 255)',\n    text: 'rgb(28, 28, 30)',\n    border: 'rgb(216, 216, 216)',\n    notification: 'rgb(255, 59, 48)',\n  },\n};\n\nexport default DefaultTheme;\n","import { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from './BaseRouter';\nimport type {\n  NavigationState,\n  CommonNavigationAction,\n  Router,\n  DefaultRouterOptions,\n  Route,\n  ParamListBase,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<\n  ParamList extends ParamListBase\n> = NavigationState<ParamList> & {\n  /**\n   * Type of the router, in this case, it's stack.\n   */\n  type: 'stack';\n};\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = state.routes.filter((route) =>\n        routeNames.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route =\n              action.payload.name && action.payload.key\n                ? state.routes.find(\n                    (route) =>\n                      route.name === action.payload.name &&\n                      route.key === action.payload.key\n                  )\n                : id\n                ? state.routes.find(\n                    (route) => id === getId?.({ params: route.params })\n                  )\n                : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  action.payload.params !== undefined\n                    ? {\n                        ...route.params,\n                        ...action.payload.params,\n                      }\n                    : route.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) => id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge === false) {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            } else {\n              params = action.payload.params\n                ? {\n                    ...route.params,\n                    ...action.payload.params,\n                  }\n                : route.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params\n                  ? { ...route, params }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n","import { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from './BaseRouter';\nimport type {\n  NavigationState,\n  PartialState,\n  CommonNavigationAction,\n  Router,\n  DefaultRouterOptions,\n  Route,\n  ParamListBase,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'history',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (state as PartialState<\n          TabNavigationState<ParamListBase>\n        >).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find((r) => r.name === name) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes:\n                action.payload.params !== undefined\n                  ? state.routes.map((route, i) => {\n                      if (i !== index) {\n                        return route;\n                      }\n\n                      let params;\n\n                      if (\n                        action.type === 'NAVIGATE' &&\n                        action.payload.merge === false\n                      ) {\n                        params =\n                          routeParamList[route.name] !== undefined\n                            ? {\n                                ...routeParamList[route.name],\n                                ...action.payload.params,\n                              }\n                            : action.payload.params;\n                      } else {\n                        params = action.payload.params\n                          ? {\n                              ...route.params,\n                              ...action.payload.params,\n                            }\n                          : route.params;\n                      }\n\n                      return params !== route.params\n                        ? { ...route, params }\n                        : route;\n                    })\n                  : state.routes,\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n","import * as React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\n\nexport const SingleNavigatorContext = React.createContext<\n  | {\n      register(key: string): void;\n      unregister(key: string): void;\n    }\n  | undefined\n>(undefined);\n\n/**\n * Component which ensures that there's only one navigator nested under it.\n */\nexport default function EnsureSingleNavigator({ children }: Props) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n\n  const value = React.useMemo(\n    () => ({\n      register(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (currentKey !== undefined && key !== currentKey) {\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\n        }\n\n        navigatorKeyRef.current = key;\n      },\n      unregister(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (key !== currentKey) {\n          return;\n        }\n\n        navigatorKeyRef.current = undefined;\n      },\n    }),\n    []\n  );\n\n  return (\n    <SingleNavigatorContext.Provider value={value}>\n      {children}\n    </SingleNavigatorContext.Provider>\n  );\n}\n","import * as React from 'react';\n\n/**\n * Context which holds the values for the current navigation tree.\n * Intended for use in SSR. This is not safe to use on the client.\n */\nconst CurrentRenderContext = React.createContext<\n  { options?: object } | undefined\n>(undefined);\n\nexport default CurrentRenderContext;\n","import React from 'react';\nimport { Animated, View } from 'react-native';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nexport class NativeScreen extends React.Component {\n  render() {\n    const { active, style, enabled = true, ...rest } = this.props;\n\n    return (\n      <View\n        style={[\n          style,\n          ENABLE_SCREENS && enabled && !active ? { display: 'none' } : null,\n        ]}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const ScreenContainer = View;\n\nexport const NativeScreenContainer = View;\n","import * as React from 'react';\nimport type { LinkingOptions } from './types';\n\nconst LinkingContext = React.createContext<{\n  options: LinkingOptions | undefined;\n}>({ options: undefined });\n\nLinkingContext.displayName = 'LinkingContext';\n\nexport default LinkingContext;\n","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","import * as React from 'react';\nimport { Platform, GestureResponderEvent } from 'react-native';\nimport {\n  NavigationAction,\n  NavigationHelpersContext,\n} from '@react-navigation/core';\nimport useLinkTo from './useLinkTo';\n\ntype Props = {\n  to: string;\n  action?: NavigationAction;\n};\n\n/**\n * Hook to get props for an anchor tag so it can work with in page navigation.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n */\nexport default function useLinkProps({ to, action }: Props) {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linkTo = useLinkTo();\n\n  const onPress = (\n    e?: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    let shouldHandle = false;\n\n    if (Platform.OS !== 'web' || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (\n      !e.defaultPrevented && // onPress prevented default\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      (e.button == null || e.button === 0) && // ignore everything but left clicks\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      [undefined, null, '', 'self'].includes(e.currentTarget?.target) // let browser handle \"target=_blank\" etc.\n    ) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n\n    if (shouldHandle) {\n      if (action) {\n        if (navigation) {\n          navigation.dispatch(action);\n        } else {\n          throw new Error(\"Couldn't find a navigation object.\");\n        }\n      } else {\n        if (typeof to !== 'string') {\n          throw new Error(\n            `To 'to' option is invalid (found '${String(\n              to\n            )}'. It must be a valid string for navigation.`\n          );\n        }\n\n        linkTo(to);\n      }\n    }\n  };\n\n  return {\n    href: to,\n    accessibilityRole: 'link' as const,\n    onPress,\n  };\n}\n","import * as React from 'react';\nimport {\n  getStateFromPath,\n  getActionFromState,\n  NavigationContext,\n} from '@react-navigation/core';\nimport LinkingContext from './LinkingContext';\n\nexport default function useLinkTo() {\n  const navigation = React.useContext(NavigationContext);\n  const linking = React.useContext(LinkingContext);\n\n  const linkTo = React.useCallback(\n    (path: string) => {\n      if (!path.startsWith('/')) {\n        throw new Error(`The path must start with '/' (${path}).`);\n      }\n\n      if (navigation === undefined) {\n        throw new Error(\n          \"Couldn't find a navigation object. Is your component inside a screen in a navigator?\"\n        );\n      }\n\n      const { options } = linking;\n\n      const state = options?.getStateFromPath\n        ? options.getStateFromPath(path, options.config)\n        : getStateFromPath(path, options?.config);\n\n      if (state) {\n        let root = navigation;\n        let current;\n\n        // Traverse up to get the root navigation\n        while ((current = root.dangerouslyGetParent())) {\n          root = current;\n        }\n\n        const action = getActionFromState(state, options?.config);\n\n        if (action !== undefined) {\n          root.dispatch(action);\n        } else {\n          root.reset(state);\n        }\n      } else {\n        throw new Error('Failed to parse the path to a navigation state.');\n      }\n    },\n    [linking, navigation]\n  );\n\n  return linkTo;\n}\n","import { Dimensions, Platform, StatusBar } from 'react-native';\n\nexport function isIphoneX() {\n    const dimen = Dimensions.get('window');\n    return (\n        Platform.OS === 'ios' &&\n        !Platform.isPad &&\n        !Platform.isTVOS &&\n        ((dimen.height === 780 || dimen.width === 780)\n          || (dimen.height === 812 || dimen.width === 812)\n          || (dimen.height === 844 || dimen.width === 844)\n          || (dimen.height === 896 || dimen.width === 896)\n          || (dimen.height === 926 || dimen.width === 926))\n    );\n}\n\nexport function ifIphoneX(iphoneXStyle, regularStyle) {\n    if (isIphoneX()) {\n        return iphoneXStyle;\n    }\n    return regularStyle;\n}\n\nexport function getStatusBarHeight(safe) {\n    return Platform.select({\n        ios: ifIphoneX(safe ? 44 : 30, 20),\n        android: StatusBar.currentHeight,\n        default: 0\n    });\n}\n\nexport function getBottomSpace() {\n    return isIphoneX() ? 34 : 0;\n}\n","import * as React from 'react';\nimport { BackHandler } from 'react-native';\nimport type { NavigationContainerRef } from '@react-navigation/core';\n\nexport default function useBackButton(\n  ref: React.RefObject<NavigationContainerRef>\n) {\n  React.useEffect(() => {\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      () => {\n        const navigation = ref.current;\n\n        if (navigation == null) {\n          return false;\n        }\n\n        if (navigation.canGoBack()) {\n          navigation.goBack();\n\n          return true;\n        }\n\n        return false;\n      }\n    );\n\n    return () => subscription.remove();\n  }, [ref]);\n}\n","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nimport type { Theme } from '../types';\n\ntype Props = {\n  value: Theme;\n  children: React.ReactNode;\n};\n\nexport default function ThemeProvider({ value, children }: Props) {\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n","import * as React from 'react';\n\nexport type ServerContextType = {\n  location?: {\n    pathname: string;\n    search: string;\n  };\n};\n\nconst ServerContext = React.createContext<ServerContextType | undefined>(\n  undefined\n);\n\nexport default ServerContext;\n","import * as React from 'react';\nimport {\n  getStateFromPath as getStateFromPathDefault,\n  getPathFromState as getPathFromStateDefault,\n  getActionFromState as getActionFromStateDefault,\n  NavigationContainerRef,\n  NavigationState,\n} from '@react-navigation/core';\nimport { nanoid } from 'nanoid/non-secure';\nimport ServerContext from './ServerContext';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype HistoryRecord = {\n  // Unique identifier for this record to match it with window.history.state\n  id: string;\n  // Navigation state object for the history entry\n  state: NavigationState;\n  // Path of the history entry\n  path: string;\n};\n\nconst createMemoryHistory = () => {\n  let index = 0;\n  let items: HistoryRecord[] = [];\n\n  // Pending callbacks for `history.go(n)`\n  // We might modify the callback stored if it was interrupted, so we have a ref to identify it\n  const pending: { ref: unknown; cb: (interrupted?: boolean) => void }[] = [];\n\n  const interrupt = () => {\n    // If another history operation was performed we need to interrupt existing ones\n    // This makes sure that calls such as `history.replace` after `history.go` don't happen\n    // Since otherwise it won't be correct if something else has changed\n    pending.forEach((it) => {\n      const cb = it.cb;\n      it.cb = () => cb(true);\n    });\n  };\n\n  const history = {\n    get index(): number {\n      // We store an id in the state instead of an index\n      // Index could get out of sync with in-memory values if page reloads\n      const id = window.history.state?.id;\n\n      if (id) {\n        const index = items.findIndex((item) => item.id === id);\n\n        return index > -1 ? index : 0;\n      }\n\n      return 0;\n    },\n\n    get(index: number) {\n      return items[index];\n    },\n\n    backIndex({ path }: { path: string }) {\n      // We need to find the index from the element before current to get closest path to go back to\n      for (let i = index - 1; i >= 0; i--) {\n        const item = items[i];\n\n        if (item.path === path) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n\n    push({ path, state }: { path: string; state: NavigationState }) {\n      interrupt();\n\n      const id = nanoid();\n\n      // When a new entry is pushed, all the existing entries after index will be inaccessible\n      // So we remove any existing entries after the current index to clean them up\n      items = items.slice(0, index + 1);\n\n      items.push({ path, state, id });\n      index = items.length - 1;\n\n      // We pass empty string for title because it's ignored in all browsers except safari\n      // We don't store state object in history.state because:\n      // - browsers have limits on how big it can be, and we don't control the size\n      // - while not recommended, there could be non-serializable data in state\n      window.history.pushState({ id }, '', path);\n    },\n\n    replace({ path, state }: { path: string; state: NavigationState }) {\n      interrupt();\n\n      const id = window.history.state?.id ?? nanoid();\n\n      if (items.length) {\n        items[index] = { path, state, id };\n      } else {\n        // This is the first time any state modifications are done\n        // So we need to push the entry as there's nothing to replace\n        items.push({ path, state, id });\n      }\n\n      window.history.replaceState({ id }, '', path);\n    },\n\n    // `history.go(n)` is asynchronous, there are couple of things to keep in mind:\n    // - it won't do anything if we can't go `n` steps, the `popstate` event won't fire.\n    // - each `history.go(n)` call will trigger a separate `popstate` event with correct location.\n    // - the `popstate` event fires before the next frame after calling `history.go(n)`.\n    // This method differs from `history.go(n)` in the sense that it'll go back as many steps it can.\n    go(n: number) {\n      interrupt();\n\n      if (n > 0) {\n        // We shouldn't go forward more than available index\n        n = Math.min(n, items.length - 1);\n      } else if (n < 0) {\n        // We shouldn't go back more than the 0 index\n        // Otherwise we'll exit the page\n        n = index + n < 0 ? -index : n;\n      }\n\n      if (n === 0) {\n        return;\n      }\n\n      index += n;\n\n      // When we call `history.go`, `popstate` will fire when there's history to go back to\n      // So we need to somehow handle following cases:\n      // - There's history to go back, `history.go` is called, and `popstate` fires\n      // - `history.go` is called multiple times, we need to resolve on respective `popstate`\n      // - No history to go back, but `history.go` was called, browser has no API to detect it\n      return new Promise<void>((resolve, reject) => {\n        const done = (interrupted?: boolean) => {\n          clearTimeout(timer);\n\n          if (interrupted) {\n            reject(new Error('History was changed during navigation.'));\n            return;\n          }\n\n          // There seems to be a bug in Chrome regarding updating the title\n          // If we set a title just before calling `history.go`, the title gets lost\n          // However the value of `document.title` is still what we set it to\n          // It's just not displayed in the tab bar\n          // To update the tab bar, we need to reset the title to something else first (e.g. '')\n          // And set the title to what it was before so it gets applied\n          // It won't work without setting it to empty string coz otherwise title isn't changing\n          // Which means that the browser won't do anything after setting the title\n          const { title } = window.document;\n\n          window.document.title = '';\n          window.document.title = title;\n\n          resolve();\n        };\n\n        pending.push({ ref: done, cb: done });\n\n        // If navigation didn't happen within 100ms, assume that it won't happen\n        // This may not be accurate, but hopefully it won't take so much time\n        // In Chrome, navigation seems to happen instantly in next microtask\n        // But on Firefox, it seems to take much longer, around 50ms from our testing\n        // We're using a hacky timeout since there doesn't seem to be way to know for sure\n        const timer = setTimeout(() => {\n          const index = pending.findIndex((it) => it.ref === done);\n\n          if (index > -1) {\n            pending[index].cb();\n            pending.splice(index, 1);\n          }\n        }, 100);\n\n        const onPopState = () => {\n          const last = pending.pop();\n\n          window.removeEventListener('popstate', onPopState);\n          last?.cb();\n        };\n\n        window.addEventListener('popstate', onPopState);\n        window.history.go(n);\n      });\n    },\n\n    // The `popstate` event is triggered when history changes, except `pushState` and `replaceState`\n    // If we call `history.go(n)` ourselves, we don't want it to trigger the listener\n    // Here we normalize it so that only external changes (e.g. user pressing back/forward) trigger the listener\n    listen(listener: () => void) {\n      const onPopState = () => {\n        if (pending.length) {\n          // This was triggered by `history.go(n)`, we shouldn't call the listener\n          return;\n        }\n\n        listener();\n      };\n\n      window.addEventListener('popstate', onPopState);\n\n      return () => window.removeEventListener('popstate', onPopState);\n    },\n  };\n\n  return history;\n};\n\n/**\n * Find the matching navigation state that changed between 2 navigation states\n * e.g.: a -> b -> c -> d and a -> b -> c -> e -> f, if history in b changed, b is the matching state\n */\nconst findMatchingState = <T extends NavigationState>(\n  a: T | undefined,\n  b: T | undefined\n): [T | undefined, T | undefined] => {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n\n  // Tab and drawer will have `history` property, but stack will have history in `routes`\n  const aHistoryLength = a.history ? a.history.length : a.routes.length;\n  const bHistoryLength = b.history ? b.history.length : b.routes.length;\n\n  const aRoute = a.routes[a.index];\n  const bRoute = b.routes[b.index];\n\n  const aChildState = aRoute.state as T | undefined;\n  const bChildState = bRoute.state as T | undefined;\n\n  // Stop here if this is the state object that changed:\n  // - history length is different\n  // - focused routes are different\n  // - one of them doesn't have child state\n  // - child state keys are different\n  if (\n    aHistoryLength !== bHistoryLength ||\n    aRoute.key !== bRoute.key ||\n    aChildState === undefined ||\n    bChildState === undefined ||\n    aChildState.key !== bChildState.key\n  ) {\n    return [a, b];\n  }\n\n  return findMatchingState(aChildState, bChildState);\n};\n\n/**\n * Run async function in series as it's called.\n */\nconst series = (cb: () => Promise<void>) => {\n  // Whether we're currently handling a callback\n  let handling = false;\n  let queue: (() => Promise<void>)[] = [];\n\n  const callback = async () => {\n    try {\n      if (handling) {\n        // If we're currently handling a previous event, wait before handling this one\n        // Add the callback to the beginning of the queue\n        queue.unshift(callback);\n        return;\n      }\n\n      handling = true;\n\n      await cb();\n    } finally {\n      handling = false;\n\n      if (queue.length) {\n        // If we have queued items, handle the last one\n        const last = queue.pop();\n\n        last?.();\n      }\n    }\n  };\n\n  return callback;\n};\n\nlet isUsingLinking = false;\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef>,\n  {\n    enabled = true,\n    config,\n    getStateFromPath = getStateFromPathDefault,\n    getPathFromState = getPathFromStateDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: LinkingOptions\n) {\n  React.useEffect(() => {\n    if (enabled !== false && isUsingLinking) {\n      throw new Error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since URL integration should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You are not using both 'linking' prop and 'useLinking'\",\n          \"- You don't have 'useLinking' in multiple components\",\n        ]\n          .join('\\n')\n          .trim()\n      );\n    } else {\n      isUsingLinking = enabled !== false;\n    }\n\n    return () => {\n      isUsingLinking = false;\n    };\n  });\n\n  const [history] = React.useState(createMemoryHistory);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const configRef = React.useRef(config);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n  const getPathFromStateRef = React.useRef(getPathFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getActionFromStateRef.current = getActionFromState;\n    getPathFromStateRef.current = getPathFromState;\n  });\n\n  const server = React.useContext(ServerContext);\n\n  const getInitialState = React.useCallback(() => {\n    let value: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const location =\n        server?.location ??\n        (typeof window !== 'undefined' ? window.location : undefined);\n\n      const path = location ? location.pathname + location.search : undefined;\n\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const previousIndexRef = React.useRef<number | undefined>(undefined);\n  const previousStateRef = React.useRef<NavigationState | undefined>(undefined);\n  const pendingPopStatePathRef = React.useRef<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousIndexRef.current = history.index;\n\n    return history.listen(() => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const path = location.pathname + location.search;\n      const index = history.index;\n\n      const previousIndex = previousIndexRef.current ?? 0;\n\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n\n      // When browser back/forward is clicked, we first need to check if state object for this index exists\n      // If it does we'll reset to that state object\n      // Otherwise, we'll handle it like a regular deep link\n      const record = history.get(index);\n\n      if (record?.path === path && record?.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n\n      const state = getStateFromPathRef.current(path, configRef.current);\n\n      // We should only dispatch an action when going forward\n      // Otherwise the action will likely add items to history, which would mess things up\n      if (state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        if (index > previousIndex) {\n          const action = getActionFromStateRef.current(\n            state,\n            configRef.current\n          );\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${e.message}`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        // if current path didn't return any state, we should revert to initial state\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    if (ref.current) {\n      // We need to record the current metadata on the first render if they aren't set\n      // This will allow the initial state to be in the history entry\n      const state = ref.current.getRootState();\n\n      if (state) {\n        const path = getPathFromStateRef.current(state, configRef.current);\n\n        if (previousStateRef.current === undefined) {\n          previousStateRef.current = state;\n        }\n\n        history.replace({ path, state });\n      }\n    }\n\n    const onStateChange = async () => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const previousState = previousStateRef.current;\n      const state = navigation.getRootState();\n\n      const pendingPath = pendingPopStatePathRef.current;\n      const path = getPathFromStateRef.current(state, configRef.current);\n\n      previousStateRef.current = state;\n      pendingPopStatePathRef.current = undefined;\n\n      // To detect the kind of state change, we need to:\n      // - Find the common focused navigation state in previous and current state\n      // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace\n      // - If no common focused navigation state found, it's a replace\n      const [previousFocusedState, focusedState] = findMatchingState(\n        previousState,\n        state\n      );\n\n      if (\n        previousFocusedState &&\n        focusedState &&\n        // We should only handle push/pop if path changed from what was in last `popstate`\n        // Otherwise it's likely a change triggered by `popstate`\n        path !== pendingPath\n      ) {\n        const historyDelta =\n          (focusedState.history\n            ? focusedState.history.length\n            : focusedState.routes.length) -\n          (previousFocusedState.history\n            ? previousFocusedState.history.length\n            : previousFocusedState.routes.length);\n\n        if (historyDelta > 0) {\n          // If history length is increased, we should pushState\n          // Note that path might not actually change here, for example, drawer open should pushState\n          history.push({ path, state });\n        } else if (historyDelta < 0) {\n          // If history length is decreased, i.e. entries were removed, we want to go back\n\n          const nextIndex = history.backIndex({ path });\n          const currentIndex = history.index;\n\n          try {\n            if (nextIndex !== -1 && nextIndex < currentIndex) {\n              // An existing entry for this path exists and it's less than current index, go back to that\n              await history.go(nextIndex - currentIndex);\n            } else {\n              // We couldn't find an existing entry to go back to, so we'll go back by the delta\n              // This won't be correct if multiple routes were pushed in one go before\n              // Usually this shouldn't happen and this is a fallback for that\n              await history.go(historyDelta);\n            }\n\n            // Store the updated state as well as fix the path if incorrect\n            history.replace({ path, state });\n          } catch (e) {\n            // The navigation was interrupted\n          }\n        } else {\n          // If history length is unchanged, we want to replaceState\n          history.replace({ path, state });\n        }\n      } else {\n        // If no common navigation state was found, assume it's a replace\n        // This would happen if the user did a reset/conditionally changed navigators\n        history.replace({ path, state });\n      }\n    };\n\n    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time\n    // This could happen since `history.go(n)` is asynchronous\n    // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up\n    return ref.current?.addListener('state', series(onStateChange));\n  });\n\n  return {\n    getInitialState,\n  };\n}\n","import type { NavigationState, PartialState, Route } from './types';\n\ntype ResetState =\n  | PartialState<NavigationState>\n  | NavigationState\n  | (Omit<NavigationState, 'routes'> & {\n      routes: Omit<Route<string>, 'key'>[];\n    });\n\nexport type Action =\n  | {\n      type: 'GO_BACK';\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'NAVIGATE';\n      payload:\n        | { key: string; name?: undefined; params?: object; merge?: boolean }\n        | { name: string; key?: string; params?: object; merge?: boolean };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'RESET';\n      payload: ResetState | undefined;\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'SET_PARAMS';\n      payload: { params?: object };\n      source?: string;\n      target?: string;\n    };\n\nexport function goBack(): Action {\n  return { type: 'GO_BACK' };\n}\n\nexport function navigate(\n  route:\n    | { key: string; params?: object }\n    | { name: string; key?: string; params?: object }\n): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(name: string, params?: object): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(...args: any): Action {\n  if (typeof args[0] === 'string') {\n    return { type: 'NAVIGATE', payload: { name: args[0], params: args[1] } };\n  } else {\n    const payload = args[0] || {};\n\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error(\n        'You need to specify name or key when calling navigate with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigate for usage.'\n      );\n    }\n\n    return { type: 'NAVIGATE', payload };\n  }\n}\n\nexport function reset(state: ResetState | undefined): Action {\n  return { type: 'RESET', payload: state };\n}\n\nexport function setParams(params: object): Action {\n  return { type: 'SET_PARAMS', payload: { params } };\n}\n","import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationContext from './NavigationContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useChildListeners from './useChildListeners';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport checkSerializable from './checkSerializable';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerProps,\n} from './types';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nconst serializableWarnings: string[] = [];\n\ntry {\n  /**\n   * Migration instructions for removal of devtools from core\n   */\n  Object.defineProperty(\n    global,\n    'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',\n    {\n      set(_) {\n        console.warn(\n          \"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/devtools\"\n        );\n      },\n    }\n  );\n} catch (e) {\n  // Ignore\n}\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [\n      state,\n      getState,\n      setState,\n      scheduleUpdate,\n      flushUpdates,\n    ] = useSyncState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners.focus[0] == null) {\n        throw new Error(NOT_INITIALIZED_ERROR);\n      }\n\n      listeners.focus[0]((navigation) => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          throw new Error(NOT_INITIALIZED_ERROR);\n        }\n\n        listeners.focus[0]((navigation) =>\n          navigation.dispatch({\n            ...CommonActions.reset(state),\n            target,\n          })\n        );\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      let state = getRootState();\n      if (state === undefined) {\n        return undefined;\n      }\n      while (state.routes[state.index].state !== undefined) {\n        state = state.routes[state.index].state as NavigationState;\n      }\n      return state.routes[state.index];\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-expect-error: we can't know the type statically\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n      dangerouslyGetState: () => state,\n      dangerouslyGetParent: () => undefined,\n      getCurrentRoute,\n      getCurrentOptions,\n    }));\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({ type: '__unsafe_action__', data: { action, noop } });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n    });\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (state !== undefined) {\n          const result = checkSerializable(state);\n\n          if (!result.serializable) {\n            const { location, reason } = result;\n\n            let path = '';\n            let pointer: Record<any, any> = state;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\n        <NavigationBuilderContext.Provider value={builderContext}>\n          <NavigationStateContext.Provider value={context}>\n            <UnhandledActionContext.Provider\n              value={onUnhandledAction ?? defaultOnUnhandledAction}\n            >\n              <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n            </UnhandledActionContext.Provider>\n          </NavigationStateContext.Provider>\n        </NavigationBuilderContext.Provider>\n      </ScheduleUpdateContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n","import * as React from 'react';\nimport type { NavigationAction } from '@react-navigation/routers';\n\nconst UnhandledActionContext = React.createContext<\n  ((action: NavigationAction) => void) | undefined\n>(undefined);\n\nexport default UnhandledActionContext;\n","import * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\n\nexport const ScheduleUpdateContext = React.createContext<{\n  scheduleUpdate: (callback: () => void) => void;\n  flushUpdates: () => void;\n}>({\n  scheduleUpdate() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  flushUpdates() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\n/**\n * When screen config changes, we want to update the navigator in the same update phase.\n * However, navigation state is in the root component and React won't let us update it from a child.\n * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n * It lets all subsequent updates access the latest state so it stays correct.\n * Then we call setState during after the component updates.\n */\nexport default function useScheduleUpdate(callback: () => void) {\n  const { scheduleUpdate, flushUpdates } = React.useContext(\n    ScheduleUpdateContext\n  );\n\n  scheduleUpdate(callback);\n\n  React.useEffect(flushUpdates);\n}\n","import * as React from 'react';\nimport type { ListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add action listeners.\n */\nexport default function useChildListeners() {\n  const { current: listeners } = React.useRef<\n    {\n      [K in keyof ListenerMap]: ListenerMap[K][];\n    }\n  >({\n    action: [],\n    focus: [],\n  });\n\n  const addListener = React.useCallback(\n    <T extends keyof ListenerMap>(type: T, listener: ListenerMap[T]) => {\n      // @ts-expect-error: listener should be correct type according to `type`\n      listeners[type].push(listener);\n\n      return () => {\n        // @ts-expect-error: listener should be correct type according to `type`\n        const index = listeners[type].indexOf(listener);\n\n        listeners[type].splice(index, 1);\n      };\n    },\n    [listeners]\n  );\n\n  return {\n    listeners,\n    addListener,\n  };\n}\n","import * as React from 'react';\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useKeyedChildListeners() {\n  const { current: keyedListeners } = React.useRef<\n    {\n      [K in keyof KeyedListenerMap]: Record<\n        string,\n        KeyedListenerMap[K] | undefined\n      >;\n    }\n  >({\n    getState: {},\n    beforeRemove: {},\n  });\n\n  const addKeyedListener = React.useCallback(\n    <T extends keyof KeyedListenerMap>(\n      type: T,\n      key: string,\n      listener: KeyedListenerMap[T]\n    ) => {\n      // @ts-expect-error: listener should be correct type according to `type`\n      keyedListeners[type][key] = listener;\n\n      return () => {\n        // @ts-expect-error: listener should be correct type according to `type`\n        keyedListeners[type][key] = undefined;\n      };\n    },\n    [keyedListeners]\n  );\n\n  return {\n    keyedListeners,\n    addKeyedListener,\n  };\n}\n","import * as React from 'react';\nimport type { ParamListBase, NavigationState } from '@react-navigation/routers';\nimport NavigationStateContext from './NavigationStateContext';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport type { NavigationProp } from './types';\n\ntype Options = {\n  key?: string;\n  navigation?: NavigationProp<ParamListBase, string, NavigationState, object>;\n  options?: object | undefined;\n};\n\nexport default function useOptionsGetters({\n  key,\n  options,\n  navigation,\n}: Options) {\n  const optionsRef = React.useRef<object | undefined>(options);\n  const optionsGettersFromChildRef = React.useRef<\n    Record<string, () => object | undefined | null>\n  >({});\n\n  const { onOptionsChange } = React.useContext(NavigationBuilderContext);\n  const { addOptionsGetter: parentAddOptionsGetter } = React.useContext(\n    NavigationStateContext\n  );\n\n  const optionsChangeListener = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n    const hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      onOptionsChange(optionsRef.current ?? {});\n    }\n  }, [navigation, onOptionsChange]);\n\n  React.useEffect(() => {\n    optionsRef.current = options;\n    optionsChangeListener();\n\n    return navigation?.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(key)) {\n        const result = optionsGettersFromChildRef.current[key]?.();\n\n        // null means unfocused route\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n\n  const getCurrentOptions = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n\n  React.useEffect(() => {\n    return parentAddOptionsGetter?.(key!, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n\n  const addOptionsGetter = React.useCallback(\n    (key: string, getter: () => object | undefined | null) => {\n      optionsGettersFromChildRef.current[key] = getter;\n      optionsChangeListener();\n\n      return () => {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete optionsGettersFromChildRef.current[key];\n        optionsChangeListener();\n      };\n    },\n    [optionsChangeListener]\n  );\n\n  return {\n    addOptionsGetter,\n    getCurrentOptions,\n  };\n}\n","import * as React from 'react';\nimport type { EventEmitter, EventConsumer, EventArg } from './types';\n\nexport type NavigationEventEmitter<\n  T extends Record<string, any>\n> = EventEmitter<T> & {\n  create: (target: string) => EventConsumer<T>;\n};\n\ntype Listeners = ((e: any) => void)[];\n\n/**\n * Hook to manage the event system used by the navigator to notify screens of various events.\n */\nexport default function useEventEmitter<T extends Record<string, any>>(\n  listen?: (e: any) => void\n): NavigationEventEmitter<T> {\n  const listenRef = React.useRef(listen);\n\n  React.useEffect(() => {\n    listenRef.current = listen;\n  });\n\n  const listeners = React.useRef<Record<string, Record<string, Listeners>>>({});\n\n  const create = React.useCallback((target: string) => {\n    const removeListener = (type: string, callback: (data: any) => void) => {\n      const callbacks = listeners.current[type]\n        ? listeners.current[type][target]\n        : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      const index = callbacks.indexOf(callback);\n\n      callbacks.splice(index, 1);\n    };\n\n    const addListener = (type: string, callback: (data: any) => void) => {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n\n      return () => removeListener(type, callback);\n    };\n\n    return {\n      addListener,\n      removeListener,\n    };\n  }, []);\n\n  const emit = React.useCallback(\n    ({\n      type,\n      data,\n      target,\n      canPreventDefault,\n    }: {\n      type: string;\n      data?: any;\n      target?: string;\n      canPreventDefault?: boolean;\n    }) => {\n      const items = listeners.current[type] || {};\n\n      // Copy the current list of callbacks in case they are mutated during execution\n      const callbacks =\n        target !== undefined\n          ? items[target]?.slice()\n          : ([] as Listeners)\n              .concat(...Object.keys(items).map((t) => items[t]))\n              .filter((cb, i, self) => self.lastIndexOf(cb) === i);\n\n      const event: EventArg<any, any, any> = {\n        get type() {\n          return type;\n        },\n      };\n\n      if (target !== undefined) {\n        Object.defineProperty(event, 'target', {\n          enumerable: true,\n          get() {\n            return target;\n          },\n        });\n      }\n\n      if (data !== undefined) {\n        Object.defineProperty(event, 'data', {\n          enumerable: true,\n          get() {\n            return data;\n          },\n        });\n      }\n\n      if (canPreventDefault) {\n        let defaultPrevented = false;\n\n        Object.defineProperties(event, {\n          defaultPrevented: {\n            enumerable: true,\n            get() {\n              return defaultPrevented;\n            },\n          },\n          preventDefault: {\n            enumerable: true,\n            value() {\n              defaultPrevented = true;\n            },\n          },\n        });\n      }\n\n      listenRef.current?.(event);\n\n      callbacks?.forEach((cb) => cb(event));\n\n      return event as any;\n    },\n    []\n  );\n\n  return React.useMemo(() => ({ create, emit }), [create, emit]);\n}\n","import type * as React from 'react';\nimport type { ParamListBase, NavigationState } from '@react-navigation/routers';\nimport Screen from './Screen';\nimport type { TypedNavigator, EventMapBase } from './types';\n\n/**\n * Higher order component to create a `Navigator` and `Screen` pair.\n * Custom navigators should wrap the navigator component in `createNavigator` before exporting.\n *\n * @param Navigator The navigtor component to wrap.\n * @returns Factory method to create a `Navigator` and `Screen` pair.\n */\nexport default function createNavigatorFactory<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n  NavigatorComponent extends React.ComponentType<any>\n>(Navigator: NavigatorComponent) {\n  return function <ParamList extends ParamListBase>(): TypedNavigator<\n    ParamList,\n    State,\n    ScreenOptions,\n    EventMap,\n    typeof Navigator\n  > {\n    if (arguments[0] !== undefined) {\n      throw new Error(\n        \"Creating a navigator doesn't take an argument. Maybe you are trying to use React Navigation 4 API with React Navigation 5? See https://reactnavigation.org/docs/upgrading-from-4.x for migration guide.\"\n      );\n    }\n\n    return {\n      Navigator,\n      Screen,\n    };\n  };\n}\n","import type { ParamListBase, NavigationState } from '@react-navigation/routers';\nimport type { RouteConfig, EventMapBase } from './types';\n\n/**\n * Empty component used for specifying route configuration.\n */\nexport default function Screen<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>(_: RouteConfig<ParamList, RouteName, State, ScreenOptions, EventMap>) {\n  /* istanbul ignore next */\n  return null;\n}\n","import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport type { NavigationHelpers } from './types';\n\n/**\n * Context which holds the navigation helpers of the parent navigator.\n * Navigators should use this context in their view component.\n */\nconst NavigationHelpersContext = React.createContext<\n  NavigationHelpers<ParamListBase> | undefined\n>(undefined);\n\nexport default NavigationHelpersContext;\n","import * as React from 'react';\nimport type {\n  ParamListBase,\n  NavigationState,\n  Route,\n} from '@react-navigation/routers';\nimport type { RouteProp } from './types';\n\ntype RouteCache = Map<Route<string>, RouteProp<ParamListBase, string>>;\n\n/**\n * Utilites such as `getFocusedRouteNameFromRoute` need to access state.\n * So we need a way to suppress the warning for those use cases.\n * This is fine since they are internal utilities and this is not public API.\n */\nexport const SUPPRESS_STATE_ACCESS_WARNING = { value: false };\n\n/**\n * Hook to cache route props for each screen in the navigator.\n * This lets add warnings and modifications to the route object but keep references between renders.\n */\nexport default function useRouteCache<State extends NavigationState>(\n  routes: State['routes']\n) {\n  // Cache object which holds route objects for each screen\n  const cache = React.useMemo(() => ({ current: new Map() as RouteCache }), []);\n\n  if (process.env.NODE_ENV === 'production') {\n    // We don't want the overhead of creating extra maps every render in prod\n    return routes;\n  }\n\n  cache.current = routes.reduce((acc, route) => {\n    const previous = cache.current.get(route);\n\n    if (previous) {\n      // If a cached route object already exists, reuse it\n      acc.set(route, previous);\n    } else {\n      const proxy = { ...route };\n\n      Object.defineProperty(proxy, 'state', {\n        get() {\n          if (!SUPPRESS_STATE_ACCESS_WARNING.value) {\n            console.warn(\n              \"Accessing the 'state' property of the 'route' object is not supported. If you want to get the focused route name, use the 'getFocusedRouteNameFromRoute' helper instead: https://reactnavigation.org/docs/screen-options-resolution/#setting-parent-screen-options-based-on-child-navigators-state\"\n            );\n          }\n\n          return route.state;\n        },\n      });\n\n      acc.set(route, proxy);\n    }\n\n    return acc;\n  }, new Map() as RouteCache);\n\n  return Array.from(cache.current.values());\n}\n","import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport default function useRoute<\n  T extends RouteProp<ParamListBase, string>\n>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n","import * as React from 'react';\nimport useNavigation from './useNavigation';\n\ntype EffectCallback = () => undefined | void | (() => void);\n\n/**\n * Hook to run an effect in a focused screen, similar to `React.useEffect`.\n * This can be used to perform side-effects such as fetching data or subscribing to events.\n * The passed callback should be wrapped in `React.useCallback` to avoid running the effect too often.\n *\n * @param callback Memoized callback containing the effect, should optionally return a cleanup function.\n */\nexport default function useFocusEffect(effect: EffectCallback) {\n  const navigation = useNavigation();\n\n  if (arguments[1] !== undefined) {\n    const message =\n      \"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \" +\n      \"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\" +\n      'useFocusEffect(\\n' +\n      '  React.useCallback(() => {\\n' +\n      '    // Your code here\\n' +\n      '  }, [depA, depB])\\n' +\n      ');\\n\\n' +\n      'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n\n    console.error(message);\n  }\n\n  React.useEffect(() => {\n    let isFocused = false;\n    let cleanup: undefined | void | (() => void);\n\n    const callback = () => {\n      const destroy = effect();\n\n      if (destroy === undefined || typeof destroy === 'function') {\n        return destroy;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        let message =\n          'An effect function must not return anything besides a function, which is used for clean-up.';\n\n        if (destroy === null) {\n          message +=\n            \" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";\n        } else if (typeof (destroy as any).then === 'function') {\n          message +=\n            \"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \" +\n            'Instead, write the async function inside your effect ' +\n            'and call it immediately:\\n\\n' +\n            'useFocusEffect(\\n' +\n            '  React.useCallback() => {\\n' +\n            '    async function fetchData() {\\n' +\n            '      // You can await here\\n' +\n            '      const response = await MyAPI.getData(someId);\\n' +\n            '      // ...\\n' +\n            '    }\\n\\n' +\n            '    fetchData();\\n' +\n            '  }, [someId])\\n' +\n            ');\\n\\n' +\n            'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n        } else {\n          message += ` You returned '${JSON.stringify(destroy)}'.`;\n        }\n\n        console.error(message);\n      }\n    };\n\n    // We need to run the effect on intial render/dep changes if the screen is focused\n    if (navigation.isFocused()) {\n      cleanup = callback();\n      isFocused = true;\n    }\n\n    const unsubscribeFocus = navigation.addListener('focus', () => {\n      // If callback was already called for focus, avoid calling it again\n      // The focus event may also fire on intial render, so we guard against runing the effect twice\n      if (isFocused) {\n        return;\n      }\n\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = callback();\n      isFocused = true;\n    });\n\n    const unsubscribeBlur = navigation.addListener('blur', () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = undefined;\n      isFocused = false;\n    });\n\n    return () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [effect, navigation]);\n}\n","import escape from 'escape-string-regexp';\nimport * as queryString from 'query-string';\nimport type {\n  NavigationState,\n  PartialState,\n  InitialState,\n} from '@react-navigation/routers';\nimport checkLegacyPathConfig from './checkLegacyPathConfig';\nimport type { PathConfigMap } from './types';\n\ntype Options = {\n  initialRouteName?: string;\n  screens: PathConfigMap;\n};\n\ntype ParseConfig = Record<string, (value: string) => any>;\n\ntype RouteConfig = {\n  screen: string;\n  regex?: RegExp;\n  path: string;\n  pattern: string;\n  routeNames: string[];\n  parse?: ParseConfig;\n};\n\ntype InitialRouteConfig = {\n  initialRouteName: string;\n  connectedRoutes: string[];\n};\n\ntype ResultState = PartialState<NavigationState> & {\n  state?: ResultState;\n};\n\ntype ParsedRoute = {\n  name: string;\n  params?: Record<string, any> | undefined;\n};\n\n/**\n * Utility to parse a path string to initial state object accepted by the container.\n * This is useful for deep linking when we need to handle the incoming URL.\n *\n * @example\n * ```js\n * getStateFromPath(\n *   '/chat/jane/42',\n *   {\n *     screens: {\n *       Chat: {\n *         path: 'chat/:author/:id',\n *         parse: { id: Number }\n *       }\n *     }\n *   }\n * )\n * ```\n * @param path Path string to parse and convert, e.g. /foo/bar?count=42.\n * @param options Extra options to fine-tune how to parse the path.\n */\nexport default function getStateFromPath(\n  path: string,\n  options?: Options\n): ResultState | undefined {\n  const [legacy, compatOptions] = checkLegacyPathConfig(options);\n\n  let initialRoutes: InitialRouteConfig[] = [];\n\n  if (compatOptions?.initialRouteName) {\n    initialRoutes.push({\n      initialRouteName: compatOptions.initialRouteName,\n      connectedRoutes: Object.keys(compatOptions.screens),\n    });\n  }\n\n  const screens = compatOptions?.screens;\n\n  let remaining = path\n    .replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n    .replace(/^\\//, '') // Remove extra leading slash\n    .replace(/\\?.*$/, ''); // Remove query params which we will handle later\n\n  // Make sure there is a trailing slash\n  remaining = remaining.endsWith('/') ? remaining : `${remaining}/`;\n\n  if (screens === undefined) {\n    // When no config is specified, use the path segments as route names\n    const routes = remaining\n      .split('/')\n      .filter(Boolean)\n      .map((segment, i, self) => {\n        const name = decodeURIComponent(segment);\n\n        if (i === self.length - 1) {\n          return { name, params: parseQueryParams(path) };\n        }\n\n        return { name };\n      });\n\n    if (routes.length) {\n      return createNestedStateObject(routes, initialRoutes);\n    }\n\n    return undefined;\n  }\n\n  // Create a normalized configs array which will be easier to use\n  const configs = ([] as RouteConfig[])\n    .concat(\n      ...Object.keys(screens).map((key) =>\n        createNormalizedConfigs(\n          legacy,\n          key,\n          screens as PathConfigMap,\n          [],\n          initialRoutes\n        )\n      )\n    )\n    .sort((a, b) => {\n      // Sort config so that:\n      // - the most exhaustive ones are always at the beginning\n      // - patterns with wildcard are always at the end\n\n      // If 2 patterns are same, move the one with less route names up\n      // This is an error state, so it's only useful for consistent error messages\n      if (a.pattern === b.pattern) {\n        return b.routeNames.join('>').localeCompare(a.routeNames.join('>'));\n      }\n\n      // If one of the patterns starts with the other, it's more exhaustive\n      // So move it up\n      if (a.pattern.startsWith(b.pattern)) {\n        return -1;\n      }\n\n      if (b.pattern.startsWith(a.pattern)) {\n        return 1;\n      }\n\n      const aParts = a.pattern.split('/');\n      const bParts = b.pattern.split('/');\n\n      const aWildcardIndex = aParts.indexOf('*');\n      const bWildcardIndex = bParts.indexOf('*');\n\n      // If only one of the patterns has a wildcard, move it down in the list\n      if (aWildcardIndex === -1 && bWildcardIndex !== -1) {\n        return -1;\n      }\n\n      if (aWildcardIndex !== -1 && bWildcardIndex === -1) {\n        return 1;\n      }\n\n      if (aWildcardIndex === bWildcardIndex) {\n        // If `b` has more `/`, it's more exhaustive\n        // So we move it up in the list\n        return bParts.length - aParts.length;\n      }\n\n      // If the wildcard appears later in the pattern (has higher index), it's more specific\n      // So we move it up in the list\n      return bWildcardIndex - aWildcardIndex;\n    });\n\n  // Check for duplicate patterns in the config\n  configs.reduce<Record<string, RouteConfig>>((acc, config) => {\n    if (acc[config.pattern]) {\n      const a = acc[config.pattern].routeNames;\n      const b = config.routeNames;\n\n      // It's not a problem if the path string omitted from a inner most screen\n      // For example, it's ok if a path resolves to `A > B > C` or `A > B`\n      const intersects =\n        a.length > b.length\n          ? b.every((it, i) => a[i] === it)\n          : a.every((it, i) => b[i] === it);\n\n      if (!intersects) {\n        throw new Error(\n          `Found conflicting screens with the same pattern. The pattern '${\n            config.pattern\n          }' resolves to both '${a.join(' > ')}' and '${b.join(\n            ' > '\n          )}'. Patterns must be unique and cannot resolve to more than one screen.`\n        );\n      }\n    }\n\n    return Object.assign(acc, {\n      [config.pattern]: config,\n    });\n  }, {});\n\n  if (remaining === '/') {\n    // We need to add special handling of empty path so navigation to empty path also works\n    // When handling empty path, we should only look at the root level config\n    const match = configs.find(\n      (config) =>\n        config.path === '' &&\n        config.routeNames.every(\n          // Make sure that none of the parent configs have a non-empty path defined\n          (name) => !configs.find((c) => c.screen === name)?.path\n        )\n    );\n\n    if (match) {\n      return createNestedStateObject(\n        match.routeNames.map((name, i, self) => {\n          if (i === self.length - 1) {\n            return { name, params: parseQueryParams(path, match.parse) };\n          }\n\n          return { name };\n        }),\n        initialRoutes\n      );\n    }\n\n    return undefined;\n  }\n\n  let result: PartialState<NavigationState> | undefined;\n  let current: PartialState<NavigationState> | undefined;\n\n  if (legacy === false) {\n    // If we're not in legacy mode,, we match the whole path against the regex instead of segments\n    // This makes sure matches such as wildcard will catch any unmatched routes, even if nested\n    const { routes, remainingPath } = matchAgainstConfigs(\n      remaining,\n      configs.map((c) => ({\n        ...c,\n        // Add `$` to the regex to make sure it matches till end of the path and not just beginning\n        regex: c.regex ? new RegExp(c.regex.source + '$') : undefined,\n      }))\n    );\n\n    if (routes !== undefined) {\n      // This will always be empty if full path matched\n      current = createNestedStateObject(routes, initialRoutes);\n      remaining = remainingPath;\n      result = current;\n    }\n  } else {\n    // In legacy mode, we divide the path into segments and match piece by piece\n    // This preserves the legacy behaviour, but we should remove it in next major\n    while (remaining) {\n      let { routes, remainingPath } = matchAgainstConfigs(remaining, configs);\n\n      remaining = remainingPath;\n\n      // If we hadn't matched any segments earlier, use the path as route name\n      if (routes === undefined) {\n        const segments = remaining.split('/');\n\n        routes = [{ name: decodeURIComponent(segments[0]) }];\n        segments.shift();\n        remaining = segments.join('/');\n      }\n\n      const state = createNestedStateObject(routes, initialRoutes);\n\n      if (current) {\n        // The state should be nested inside the deepest route we parsed before\n        while (current?.routes[current.index || 0].state) {\n          current = current.routes[current.index || 0].state;\n        }\n\n        (current as PartialState<NavigationState>).routes[\n          current?.index || 0\n        ].state = state;\n      } else {\n        result = state;\n      }\n\n      current = state;\n    }\n  }\n\n  if (current == null || result == null) {\n    return undefined;\n  }\n\n  const route = findFocusedRoute(current);\n  const params = parseQueryParams(\n    path,\n    findParseConfigForRoute(route.name, configs)\n  );\n\n  if (params) {\n    // @ts-expect-error: params should be treated as read-only, but we're creating the state here so it doesn't matter\n    route.params = { ...route.params, ...params };\n  }\n\n  return result;\n}\n\nconst joinPaths = (...paths: string[]): string =>\n  ([] as string[])\n    .concat(...paths.map((p) => p.split('/')))\n    .filter(Boolean)\n    .join('/');\n\nconst matchAgainstConfigs = (remaining: string, configs: RouteConfig[]) => {\n  let routes: ParsedRoute[] | undefined;\n  let remainingPath = remaining;\n\n  // Go through all configs, and see if the next path segment matches our regex\n  for (const config of configs) {\n    if (!config.regex) {\n      continue;\n    }\n\n    const match = remainingPath.match(config.regex);\n\n    // If our regex matches, we need to extract params from the path\n    if (match) {\n      const matchedParams = config.pattern\n        ?.split('/')\n        .filter((p) => p.startsWith(':'))\n        .reduce<Record<string, any>>(\n          (acc, p, i) =>\n            Object.assign(acc, {\n              // The param segments appear every second item starting from 2 in the regex match result\n              [p]: match![(i + 1) * 2].replace(/\\//, ''),\n            }),\n          {}\n        );\n\n      routes = config.routeNames.map((name) => {\n        const config = configs.find((c) => c.screen === name);\n        const params = config?.path\n          ?.split('/')\n          .filter((p) => p.startsWith(':'))\n          .reduce<Record<string, any>>((acc, p) => {\n            const value = matchedParams[p];\n\n            if (value) {\n              const key = p.replace(/^:/, '').replace(/\\?$/, '');\n              acc[key] = config.parse?.[key] ? config.parse[key](value) : value;\n            }\n\n            return acc;\n          }, {});\n\n        if (params && Object.keys(params).length) {\n          return { name, params };\n        }\n\n        return { name };\n      });\n\n      remainingPath = remainingPath.replace(match[1], '');\n\n      break;\n    }\n  }\n\n  return { routes, remainingPath };\n};\n\nconst createNormalizedConfigs = (\n  legacy: boolean,\n  screen: string,\n  routeConfig: PathConfigMap,\n  routeNames: string[] = [],\n  initials: InitialRouteConfig[],\n  parentPattern?: string\n): RouteConfig[] => {\n  const configs: RouteConfig[] = [];\n\n  routeNames.push(screen);\n\n  const config = routeConfig[screen];\n\n  if (typeof config === 'string') {\n    // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n    const pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n\n    configs.push(createConfigItem(legacy, screen, routeNames, pattern, config));\n  } else if (typeof config === 'object') {\n    let pattern: string | undefined;\n\n    // if an object is specified as the value (e.g. Foo: { ... }),\n    // it can have `path` property and\n    // it could have `screens` prop which has nested configs\n    if (typeof config.path === 'string') {\n      if (legacy) {\n        pattern =\n          config.exact !== true && parentPattern\n            ? joinPaths(parentPattern, config.path)\n            : config.path;\n      } else {\n        if (config.exact && config.path === undefined) {\n          throw new Error(\n            \"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\"\n          );\n        }\n\n        pattern =\n          config.exact !== true\n            ? joinPaths(parentPattern || '', config.path || '')\n            : config.path || '';\n      }\n\n      configs.push(\n        createConfigItem(\n          legacy,\n          screen,\n          routeNames,\n          pattern,\n          config.path,\n          config.parse\n        )\n      );\n    }\n\n    if (config.screens) {\n      // property `initialRouteName` without `screens` has no purpose\n      if (config.initialRouteName) {\n        initials.push({\n          initialRouteName: config.initialRouteName,\n          connectedRoutes: Object.keys(config.screens),\n        });\n      }\n\n      Object.keys(config.screens).forEach((nestedConfig) => {\n        const result = createNormalizedConfigs(\n          legacy,\n          nestedConfig,\n          config.screens as PathConfigMap,\n          routeNames,\n          initials,\n          pattern ?? parentPattern\n        );\n\n        configs.push(...result);\n      });\n    }\n  }\n\n  routeNames.pop();\n\n  return configs;\n};\n\nconst createConfigItem = (\n  legacy: boolean,\n  screen: string,\n  routeNames: string[],\n  pattern: string,\n  path: string,\n  parse?: ParseConfig\n): RouteConfig => {\n  // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n  pattern = pattern.split('/').filter(Boolean).join('/');\n\n  const regex = pattern\n    ? new RegExp(\n        `^(${pattern\n          .split('/')\n          .map((it) => {\n            if (legacy && it === '*') {\n              throw new Error(\n                \"Please update your config to the new format to use wildcard pattern ('*'). https://reactnavigation.org/docs/configuring-links/#updating-config\"\n              );\n            }\n\n            if (it.startsWith(':')) {\n              return `(([^/]+\\\\/)${it.endsWith('?') ? '?' : ''})`;\n            }\n\n            return `${it === '*' ? '.*' : escape(it)}\\\\/`;\n          })\n          .join('')})`\n      )\n    : undefined;\n\n  return {\n    screen,\n    regex,\n    pattern,\n    path,\n    // The routeNames array is mutated, so copy it to keep the current state\n    routeNames: [...routeNames],\n    parse,\n  };\n};\n\nconst findParseConfigForRoute = (\n  routeName: string,\n  flatConfig: RouteConfig[]\n): ParseConfig | undefined => {\n  for (const config of flatConfig) {\n    if (routeName === config.routeNames[config.routeNames.length - 1]) {\n      return config.parse;\n    }\n  }\n\n  return undefined;\n};\n\n// Try to find an initial route connected with the one passed\nconst findInitialRoute = (\n  routeName: string,\n  initialRoutes: InitialRouteConfig[]\n): string | undefined => {\n  for (const config of initialRoutes) {\n    if (config.connectedRoutes.includes(routeName)) {\n      return config.initialRouteName === routeName\n        ? undefined\n        : config.initialRouteName;\n    }\n  }\n  return undefined;\n};\n\n// returns state object with values depending on whether\n// it is the end of state and if there is initialRoute for this level\nconst createStateObject = (\n  initialRoute: string | undefined,\n  route: ParsedRoute,\n  isEmpty: boolean\n): InitialState => {\n  if (isEmpty) {\n    if (initialRoute) {\n      return {\n        index: 1,\n        routes: [{ name: initialRoute }, route],\n      };\n    } else {\n      return {\n        routes: [route],\n      };\n    }\n  } else {\n    if (initialRoute) {\n      return {\n        index: 1,\n        routes: [{ name: initialRoute }, { ...route, state: { routes: [] } }],\n      };\n    } else {\n      return {\n        routes: [{ ...route, state: { routes: [] } }],\n      };\n    }\n  }\n};\n\nconst createNestedStateObject = (\n  routes: ParsedRoute[],\n  initialRoutes: InitialRouteConfig[]\n) => {\n  let state: InitialState;\n  let route = routes.shift() as ParsedRoute;\n  let initialRoute = findInitialRoute(route.name, initialRoutes);\n\n  state = createStateObject(initialRoute, route, routes.length === 0);\n\n  if (routes.length > 0) {\n    let nestedState = state;\n\n    while ((route = routes.shift() as ParsedRoute)) {\n      initialRoute = findInitialRoute(route.name, initialRoutes);\n\n      const nestedStateIndex =\n        nestedState.index || nestedState.routes.length - 1;\n\n      nestedState.routes[nestedStateIndex].state = createStateObject(\n        initialRoute,\n        route,\n        routes.length === 0\n      );\n\n      if (routes.length > 0) {\n        nestedState = nestedState.routes[nestedStateIndex]\n          .state as InitialState;\n      }\n    }\n  }\n\n  return state;\n};\n\nconst findFocusedRoute = (state: InitialState) => {\n  let current: InitialState | undefined = state;\n\n  while (current?.routes[current.index || 0].state) {\n    // The query params apply to the deepest route\n    current = current.routes[current.index || 0].state;\n  }\n\n  const route = (current as PartialState<NavigationState>).routes[\n    current?.index || 0\n  ];\n\n  return route;\n};\n\nconst parseQueryParams = (\n  path: string,\n  parseConfig?: Record<string, (value: string) => any>\n) => {\n  const query = path.split('?')[1];\n  const params = queryString.parse(query);\n\n  if (parseConfig) {\n    Object.keys(params).forEach((name) => {\n      if (parseConfig[name] && typeof params[name] === 'string') {\n        params[name] = parseConfig[name](params[name] as string);\n      }\n    });\n  }\n\n  return Object.keys(params).length ? params : undefined;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","import type { PathConfigMap } from './types';\n\ntype Options = {\n  initialRouteName?: string;\n  screens: PathConfigMap;\n};\n\nexport default function checkLegacyPathConfig(\n  config?: Options\n): [boolean, Options | undefined] {\n  let legacy = false;\n\n  if (config) {\n    // Assume legacy configuration if config has any other keys except `screens` and `initialRouteName`\n    legacy = Object.keys(config).some(\n      (key) => key !== 'screens' && key !== 'initialRouteName'\n    );\n\n    if (\n      legacy &&\n      (config.hasOwnProperty('screens') ||\n        config.hasOwnProperty('initialRouteName'))\n    ) {\n      throw new Error(\n        'Found invalid keys in the configuration object. See https://reactnavigation.org/docs/configuring-links/ for more details on the shape of the configuration object.'\n      );\n    }\n  }\n\n  if (legacy) {\n    // @ts-expect-error: we have incorrect type for config since we don't type legacy config\n    return [legacy, { screens: config }];\n  }\n\n  return [legacy, config];\n}\n","import * as queryString from 'query-string';\nimport type {\n  NavigationState,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport checkLegacyPathConfig from './checkLegacyPathConfig';\nimport type { PathConfig, PathConfigMap } from './types';\n\ntype Options = { initialRouteName?: string; screens: PathConfigMap };\n\ntype State = NavigationState | Omit<PartialState<NavigationState>, 'stale'>;\n\ntype StringifyConfig = Record<string, (value: any) => string>;\n\ntype ConfigItem = {\n  pattern?: string;\n  stringify?: StringifyConfig;\n  screens?: Record<string, ConfigItem>;\n};\n\nconst getActiveRoute = (state: State): { name: string; params?: object } => {\n  const route =\n    typeof state.index === 'number'\n      ? state.routes[state.index]\n      : state.routes[state.routes.length - 1];\n\n  if (route.state) {\n    return getActiveRoute(route.state);\n  }\n\n  return route;\n};\n\n/**\n * Utility to serialize a navigation state object to a path string.\n *\n * @example\n * ```js\n * getPathFromState(\n *   {\n *     routes: [\n *       {\n *         name: 'Chat',\n *         params: { author: 'Jane', id: 42 },\n *       },\n *     ],\n *   },\n *   {\n *     screens: {\n *       Chat: {\n *         path: 'chat/:author/:id',\n *         stringify: { author: author => author.toLowerCase() }\n *       }\n *     }\n *   }\n * )\n * ```\n *\n * @param state Navigation state to serialize.\n * @param options Extra options to fine-tune how to serialize the path.\n * @returns Path representing the state, e.g. /foo/bar?count=42.\n */\nexport default function getPathFromState(\n  state: State,\n  options?: Options\n): string {\n  if (state == null) {\n    throw Error(\n      \"Got 'undefined' for the navigation state. You must pass a valid state object.\"\n    );\n  }\n\n  const [legacy, compatOptions] = checkLegacyPathConfig(options);\n\n  // Create a normalized configs object which will be easier to use\n  const configs: Record<string, ConfigItem> = compatOptions\n    ? createNormalizedConfigs(legacy, compatOptions.screens)\n    : {};\n\n  let path = '/';\n  let current: State | undefined = state;\n\n  const allParams: Record<string, any> = {};\n\n  while (current) {\n    let index = typeof current.index === 'number' ? current.index : 0;\n    let route = current.routes[index] as Route<string> & {\n      state?: State;\n    };\n\n    let pattern: string | undefined;\n\n    let focusedParams: Record<string, any> | undefined;\n    let focusedRoute = getActiveRoute(state);\n    let currentOptions = configs;\n\n    // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n    let nestedRouteNames = [];\n\n    let hasNext = true;\n\n    while (route.name in currentOptions && hasNext) {\n      pattern = currentOptions[route.name].pattern;\n\n      nestedRouteNames.push(route.name);\n\n      if (route.params) {\n        const stringify = currentOptions[route.name]?.stringify;\n\n        const currentParams = fromEntries(\n          Object.entries(route.params).map(([key, value]) => [\n            key,\n            stringify?.[key] ? stringify[key](value) : String(value),\n          ])\n        );\n\n        if (pattern) {\n          Object.assign(allParams, currentParams);\n        }\n\n        if (focusedRoute === route) {\n          // If this is the focused route, keep the params for later use\n          // We save it here since it's been stringified already\n          focusedParams = { ...currentParams };\n\n          pattern\n            ?.split('/')\n            .filter((p) => p.startsWith(':'))\n            // eslint-disable-next-line no-loop-func\n            .forEach((p) => {\n              const name = getParamName(p);\n\n              // Remove the params present in the pattern since we'll only use the rest for query string\n              if (focusedParams) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete focusedParams[name];\n              }\n            });\n        }\n      }\n\n      // If there is no `screens` property or no nested state, we return pattern\n      if (!currentOptions[route.name].screens || route.state === undefined) {\n        hasNext = false;\n      } else {\n        index =\n          typeof route.state.index === 'number'\n            ? route.state.index\n            : route.state.routes.length - 1;\n\n        const nextRoute = route.state.routes[index];\n        const nestedConfig = currentOptions[route.name].screens;\n\n        // if there is config for next route name, we go deeper\n        if (nestedConfig && nextRoute.name in nestedConfig) {\n          route = nextRoute as Route<string> & { state?: State };\n          currentOptions = nestedConfig;\n        } else {\n          // If not, there is no sense in going deeper in config\n          hasNext = false;\n        }\n      }\n    }\n\n    if (pattern === undefined) {\n      pattern = nestedRouteNames.join('/');\n    }\n\n    if (currentOptions[route.name] !== undefined) {\n      path += pattern\n        .split('/')\n        .map((p) => {\n          const name = getParamName(p);\n\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (p === '*') {\n            if (legacy) {\n              throw new Error(\n                \"Please update your config to the new format to use wildcard pattern ('*'). https://reactnavigation.org/docs/configuring-links/#updating-config\"\n              );\n            }\n\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (p.startsWith(':')) {\n            const value = allParams[name];\n\n            if (value === undefined && p.endsWith('?')) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            return encodeURIComponent(value);\n          }\n\n          return encodeURIComponent(p);\n        })\n        .join('/');\n    } else {\n      path += encodeURIComponent(route.name);\n    }\n\n    if (!focusedParams) {\n      focusedParams = focusedRoute.params;\n    }\n\n    if (route.state) {\n      path += '/';\n    } else if (focusedParams) {\n      for (let param in focusedParams) {\n        if (focusedParams[param] === 'undefined') {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete focusedParams[param];\n        }\n      }\n\n      const query = queryString.stringify(focusedParams);\n\n      if (query) {\n        path += `?${query}`;\n      }\n    }\n\n    current = route.state;\n  }\n\n  // Remove multiple as well as trailing slashes\n  path = path.replace(/\\/+/g, '/');\n  path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n  return path;\n}\n\n// Object.fromEntries is not available in older iOS versions\nconst fromEntries = <K extends string, V>(entries: (readonly [K, V])[]) =>\n  entries.reduce((acc, [k, v]) => {\n    if (acc.hasOwnProperty(k)) {\n      throw new Error(`A value for key '${k}' already exists in the object.`);\n    }\n\n    acc[k] = v;\n    return acc;\n  }, {} as Record<K, V>);\n\nconst getParamName = (pattern: string) =>\n  pattern.replace(/^:/, '').replace(/\\?$/, '');\n\nconst joinPaths = (...paths: string[]): string =>\n  ([] as string[])\n    .concat(...paths.map((p) => p.split('/')))\n    .filter(Boolean)\n    .join('/');\n\nconst createConfigItem = (\n  legacy: boolean,\n  config: PathConfig | string,\n  parentPattern?: string\n): ConfigItem => {\n  if (typeof config === 'string') {\n    // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n    const pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n\n    return { pattern };\n  }\n\n  // If an object is specified as the value (e.g. Foo: { ... }),\n  // It can have `path` property and `screens` prop which has nested configs\n  let pattern: string | undefined;\n\n  if (legacy) {\n    pattern =\n      config.exact !== true && parentPattern && config.path\n        ? joinPaths(parentPattern, config.path)\n        : config.path;\n  } else {\n    if (config.exact && config.path === undefined) {\n      throw new Error(\n        \"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\"\n      );\n    }\n\n    pattern =\n      config.exact !== true\n        ? joinPaths(parentPattern || '', config.path || '')\n        : config.path || '';\n  }\n\n  const screens = config.screens\n    ? createNormalizedConfigs(legacy, config.screens, pattern)\n    : undefined;\n\n  return {\n    // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n    pattern: pattern?.split('/').filter(Boolean).join('/'),\n    stringify: config.stringify,\n    screens,\n  };\n};\n\nconst createNormalizedConfigs = (\n  legacy: boolean,\n  options: PathConfigMap,\n  pattern?: string\n): Record<string, ConfigItem> =>\n  fromEntries(\n    Object.entries(options).map(([name, c]) => {\n      const result = createConfigItem(legacy, c, pattern);\n\n      return [name, result];\n    })\n  );\n","import type {\n  Route,\n  PartialRoute,\n  ParamListBase,\n  NavigationState,\n  PartialState,\n  CommonActions,\n} from '@react-navigation/routers';\nimport type { PathConfig, PathConfigMap, NavigatorScreenParams } from './types';\n\ntype ConfigItem = {\n  initialRouteName?: string;\n  screens?: Record<string, ConfigItem>;\n};\n\ntype Options = { initialRouteName?: string; screens: PathConfigMap };\n\ntype NavigateAction<State extends NavigationState> = {\n  type: 'NAVIGATE';\n  payload: {\n    name: string;\n    params?: NavigatorScreenParams<State>;\n  };\n};\n\nexport default function getActionFromState(\n  state: PartialState<NavigationState>,\n  options?: Options\n): NavigateAction<NavigationState> | CommonActions.Action | undefined {\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options ? createNormalizedConfigItem(options) : {};\n\n  const routes =\n    state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  if (\n    !(\n      (routes.length === 1 && routes[0].key === undefined) ||\n      (routes.length === 2 &&\n        routes[0].key === undefined &&\n        routes[0].name === normalizedConfig?.initialRouteName &&\n        routes[1].key === undefined)\n    )\n  ) {\n    return {\n      type: 'RESET',\n      payload: state,\n    };\n  }\n\n  const route = state.routes[state.index ?? state.routes.length - 1];\n\n  let current: PartialState<NavigationState> | undefined = route?.state;\n  let config: ConfigItem | undefined = normalizedConfig?.screens?.[route?.name];\n  let params = { ...route.params } as NavigatorScreenParams<\n    ParamListBase,\n    NavigationState\n  >;\n\n  let payload = route ? { name: route.name, params } : undefined;\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    const routes =\n      current.index != null\n        ? current.routes.slice(0, current.index + 1)\n        : current.routes;\n\n    const route: Route<string> | PartialRoute<Route<string>> =\n      routes[routes.length - 1];\n\n    // Explicitly set to override existing value when merging params\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined,\n    });\n\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (\n      routes.length === 2 &&\n      routes[0].key === undefined &&\n      routes[0].name === config?.initialRouteName &&\n      routes[1].key === undefined\n    ) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params = params.params as NavigatorScreenParams<\n        ParamListBase,\n        NavigationState\n      >;\n    } else {\n      params.params = route.params;\n    }\n\n    current = route.state;\n    config = config?.screens?.[route.name];\n  }\n\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n\nconst createNormalizedConfigItem = (config: PathConfig | string) =>\n  typeof config === 'object' && config != null\n    ? {\n        initialRouteName: config.initialRouteName,\n        screens:\n          config.screens != null\n            ? createNormalizedConfigs(config.screens)\n            : undefined,\n      }\n    : {};\n\nconst createNormalizedConfigs = (options: PathConfigMap) =>\n  Object.entries(options).reduce<Record<string, ConfigItem>>((acc, [k, v]) => {\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n","import type {\n  Route,\n  PartialState,\n  NavigationState,\n} from '@react-navigation/routers';\nimport { SUPPRESS_STATE_ACCESS_WARNING } from './useRouteCache';\n\nexport default function getFocusedRouteNameFromRoute(\n  route: Partial<Route<string>> & { state?: PartialState<NavigationState> }\n): string | undefined {\n  SUPPRESS_STATE_ACCESS_WARNING.value = true;\n\n  const state = route.state;\n\n  SUPPRESS_STATE_ACCESS_WARNING.value = false;\n\n  const params = route.params as { screen?: unknown } | undefined;\n\n  const routeName = state\n    ? // Get the currently active route name in the nested navigator\n      state.routes[\n        // If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n        // The type property will only exist for rehydrated state and not for state from deep link\n        state.index ??\n          (typeof state.type === 'string' && state.type !== 'stack'\n            ? 0\n            : state.routes.length - 1)\n      ].name\n    : // If state doesn't exist, we need to default to `screen` param if available\n    typeof params?.screen === 'string'\n    ? params.screen\n    : undefined;\n\n  return routeName;\n}\n","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\n\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n\n  return theme;\n}\n","import * as React from 'react';\nimport DefaultTheme from './DefaultTheme';\nimport type { Theme } from '../types';\n\nconst ThemeContext = React.createContext<Theme>(DefaultTheme);\n\nThemeContext.displayName = 'ThemeContext';\n\nexport default ThemeContext;\n","import * as React from 'react';\nimport {\n  NavigationHelpers,\n  NavigationHelpersContext,\n  NavigationProp,\n  ParamListBase,\n  getPathFromState,\n} from '@react-navigation/core';\nimport LinkingContext from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.dangerouslyGetParent();\n\n  if (parent) {\n    const parentState = parent.dangerouslyGetState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildLink = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  return buildLink;\n}\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","import * as React from 'react';\nimport { Text, TextProps, GestureResponderEvent, Platform } from 'react-native';\nimport type { NavigationAction } from '@react-navigation/core';\nimport useLinkProps from './useLinkProps';\n\ntype Props = {\n  to: string;\n  action?: NavigationAction;\n  target?: string;\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n} & (TextProps & { children: React.ReactNode });\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link({ to, action, ...rest }: Props) {\n  const props = useLinkProps({ to, action });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n\n    props.onPress(e);\n  };\n\n  return React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: { onClick: onPress } as any,\n      default: { onPress },\n    }),\n  });\n}\n","import * as React from 'react';\n\n/**\n * Component which prevents updates for children if no props changed\n */\nfunction StaticContainer(props: any) {\n  return props.children;\n}\n\nexport default React.memo(StaticContainer, (prevProps: any, nextProps: any) => {\n  const prevPropKeys = Object.keys(prevProps);\n  const nextPropKeys = Object.keys(nextProps);\n\n  if (prevPropKeys.length !== nextPropKeys.length) {\n    return false;\n  }\n\n  for (const key of prevPropKeys) {\n    if (key === 'children') {\n      continue;\n    }\n\n    if (prevProps[key] !== nextProps[key]) {\n      return false;\n    }\n  }\n\n  return true;\n});\n","import * as React from 'react';\nimport type {\n  Route,\n  ParamListBase,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/routers';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport useOptionsGetters from './useOptionsGetters';\nimport type { NavigationProp, RouteConfig, EventMapBase } from './types';\n\ntype Props<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  screen: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n  navigation: NavigationProp<ParamListBase, string, State, ScreenOptions>;\n  route: Route<string>;\n  routeState: NavigationState | PartialState<NavigationState> | undefined;\n  getState: () => State;\n  setState: (state: State) => void;\n  options: object;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  screen,\n  route,\n  navigation,\n  routeState,\n  getState,\n  setState,\n  options,\n}: Props<State, ScreenOptions, EventMap>) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n  const { addOptionsGetter } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation,\n  });\n\n  const setKey = React.useCallback((key: string) => {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find((r) => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map((r) =>\n          r.key === route.key ? { ...r, state: child } : r\n        ),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const isInitialRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n  const context = React.useMemo(\n    () => ({\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    }),\n    [\n      routeState,\n      getCurrentState,\n      setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    ]\n  );\n\n  const ScreenComponent = screen.getComponent\n    ? screen.getComponent()\n    : screen.component;\n\n  return (\n    <NavigationStateContext.Provider value={context}>\n      <EnsureSingleNavigator>\n        <StaticContainer\n          name={screen.name}\n          render={ScreenComponent || screen.children}\n          navigation={navigation}\n          route={route}\n        >\n          {ScreenComponent !== undefined ? (\n            <ScreenComponent navigation={navigation} route={route} />\n          ) : screen.children !== undefined ? (\n            screen.children({ navigation, route })\n          ) : null}\n        </StaticContainer>\n      </EnsureSingleNavigator>\n    </NavigationStateContext.Provider>\n  );\n}\n","import * as React from 'react';\nimport type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport SceneView from './SceneView';\nimport NavigationBuilderContext, {\n  AddListener,\n  AddKeyedListener,\n} from './NavigationBuilderContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useNavigationCache from './useNavigationCache';\nimport useRouteCache from './useRouteCache';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  RouteConfig,\n  RouteProp,\n  EventMapBase,\n} from './types';\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  state: State;\n  screens: Record<\n    string,\n    RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n      }) => ScreenOptions);\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<any>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport default function useDescriptors<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const [options, setOptions] = React.useState<Record<string, object>>({});\n  const { onDispatchAction, onOptionsChange } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n    ]\n  );\n\n  const navigations = useNavigationCache<State, ScreenOptions>({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  return routes.reduce<\n    Record<string, Descriptor<ParamListBase, string, State, ScreenOptions>>\n  >((acc, route, i) => {\n    const screen = screens[route.name];\n    const navigation = navigations[route.key];\n\n    const routeOptions = {\n      // The default `screenOptions` passed to the navigator\n      ...(typeof screenOptions === 'object' || screenOptions == null\n        ? screenOptions\n        : // @ts-expect-error: this is a function, but typescript doesn't think so\n          screenOptions({\n            route,\n            navigation,\n          })),\n      // The `options` prop passed to `Screen` elements\n      ...(typeof screen.options === 'object' || screen.options == null\n        ? screen.options\n        : // @ts-expect-error: this is a function, but typescript doesn't think so\n          screen.options({\n            route,\n            navigation,\n          })),\n      // The options set via `navigation.setOptions`\n      ...options[route.key],\n    };\n\n    acc[route.key] = {\n      navigation,\n      render() {\n        return (\n          <NavigationBuilderContext.Provider key={route.key} value={context}>\n            <NavigationContext.Provider value={navigation}>\n              <NavigationRouteContext.Provider value={route}>\n                <SceneView\n                  navigation={navigation}\n                  route={route}\n                  screen={screen}\n                  routeState={state.routes[i].state}\n                  getState={getState}\n                  setState={setState}\n                  options={routeOptions}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          </NavigationBuilderContext.Provider>\n        );\n      },\n      options: routeOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n}\n","import * as React from 'react';\nimport {\n  CommonActions,\n  NavigationAction,\n  ParamListBase,\n  NavigationState,\n  Router,\n} from '@react-navigation/routers';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\nimport type { EventMapBase, NavigationHelpers, NavigationProp } from './types';\n\ntype Options<State extends NavigationState> = {\n  state: State;\n  getState: () => State;\n  navigation: NavigationHelpers<ParamListBase> &\n    Partial<NavigationProp<ParamListBase, string, any, any, any>>;\n  setOptions: (\n    cb: (options: Record<string, object>) => Record<string, object>\n  ) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMapBase>;\n};\n\ntype NavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {}\n> = {\n  [key: string]: NavigationProp<ParamListBase, string, State, ScreenOptions>;\n};\n\n/**\n * Hook to cache navigation objects for each screen in the navigator.\n * It's important to cache them to make sure navigation objects don't change between renders.\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n */\nexport default function useNavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {}\n>({\n  state,\n  getState,\n  navigation,\n  setOptions,\n  router,\n  emitter,\n}: Options<State>) {\n  // Cache object which holds navigation objects for each screen\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n  // In reality, these deps will rarely change, if ever\n  const cache = React.useMemo(\n    () => ({ current: {} as NavigationCache<State, ScreenOptions> }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getState, navigation, setOptions, router, emitter]\n  );\n\n  const actions = {\n    ...router.actionCreators,\n    ...CommonActions,\n  };\n\n  cache.current = state.routes.reduce<NavigationCache<State, ScreenOptions>>(\n    (acc, route) => {\n      const previous = cache.current[route.key];\n\n      if (previous) {\n        // If a cached navigation object already exists, reuse it\n        acc[route.key] = previous;\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { emit, ...rest } = navigation;\n\n        const dispatch = (\n          action: NavigationAction | ((state: State) => NavigationAction)\n        ) => {\n          const payload =\n            typeof action === 'function' ? action(getState()) : action;\n\n          navigation.dispatch(\n            typeof payload === 'object' && payload != null\n              ? { source: route.key, ...payload }\n              : payload\n          );\n        };\n\n        const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n          (acc, name) => {\n            // @ts-expect-error: name is a valid key, but TypeScript is dumb\n            acc[name] = (...args: any) => dispatch(actions[name](...args));\n            return acc;\n          },\n          {}\n        );\n\n        acc[route.key] = {\n          ...rest,\n          ...helpers,\n          ...emitter.create(route.key),\n          dispatch,\n          setOptions: (options: object) =>\n            setOptions((o) => ({\n              ...o,\n              [route.key]: { ...o[route.key], ...options },\n            })),\n          isFocused: () => {\n            const state = getState();\n\n            if (state.routes[state.index].key !== route.key) {\n              return false;\n            }\n\n            // If the current screen is focused, we also need to check if parent navigator is focused\n            // This makes sure that we return the focus state in the whole tree, not just this navigator\n            return navigation ? navigation.isFocused() : true;\n          },\n        };\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  return cache.current;\n}\n","import * as React from 'react';\nimport {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport { NavigationHelpers, NavigationProp, PrivateValueStore } from './types';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({ onAction, getState, emitter, router }: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n      (acc, name) => {\n        // @ts-expect-error: name is a valid key, but TypeScript is dumb\n        acc[name] = (...args: any) => dispatch(actions[name](...args));\n        return acc;\n      },\n      {}\n    );\n\n    return {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n            routeGetIdList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      dangerouslyGetParent: () => parentNavigationHelpers as any,\n      dangerouslyGetState: getState,\n    } as NavigationHelpers<ParamListBase, EventMap> &\n      (NavigationProp<ParamListBase, string, any, any, any> | undefined) &\n      ActionHelpers;\n  }, [\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    parentNavigationHelpers,\n    router,\n  ]);\n}\n","import * as React from 'react';\nimport type {\n  NavigationState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport NavigationBuilderContext, {\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport type { EventMapCore } from './types';\n\ntype Options = {\n  getState: () => NavigationState;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n};\n\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\n\nexport const shouldPreventRemove = (\n  emitter: NavigationEventEmitter<EventMapCore<any>>,\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>,\n  currentRoutes: { key: string }[],\n  nextRoutes: { key?: string | undefined }[],\n  action: NavigationAction\n) => {\n  const nextRouteKeys = nextRoutes.map((route) => route.key);\n\n  // Call these in reverse order so last screens handle the event first\n  const removedRoutes = currentRoutes\n    .filter((route) => !nextRouteKeys.includes(route.key))\n    .reverse();\n\n  const visitedRouteKeys: Set<string> =\n    // @ts-expect-error: add this property to mark that we've already emitted this action\n    action[VISITED_ROUTE_KEYS] ?? new Set<string>();\n\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys,\n  };\n\n  for (const route of removedRoutes) {\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = beforeRemoveListeners[route.key]?.(beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: { action: beforeRemoveAction },\n      canPreventDefault: true,\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport default function useOnPreventRemove({\n  getState,\n  emitter,\n  beforeRemoveListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route?.key;\n\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener?.('beforeRemove', routeKey, (action) => {\n        const state = getState();\n\n        return shouldPreventRemove(\n          emitter,\n          beforeRemoveListeners,\n          state.routes,\n          [],\n          action\n        );\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n","import * as React from 'react';\nimport type {\n  NavigationAction,\n  NavigationState,\n  PartialState,\n  Router,\n  RouterConfigOptions,\n} from '@react-navigation/routers';\nimport NavigationBuilderContext, {\n  ChildActionListener,\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport useOnPreventRemove, { shouldPreventRemove } from './useOnPreventRemove';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport type { EventMapCore } from './types';\n\ntype Options = {\n  router: Router<NavigationState, NavigationAction>;\n  key?: string;\n  getState: () => NavigationState;\n  setState: (state: NavigationState | PartialState<NavigationState>) => void;\n  actionListeners: ChildActionListener[];\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n  routerConfigOptions: RouterConfigOptions;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n};\n\n/**\n * Hook to handle actions for a navigator, including state updates and bubbling.\n *\n * Bubbling an action is achieved in 2 ways:\n * 1. To bubble action to parent, we expose the action handler in context and then access the parent context\n * 2. To bubble action to child, child adds event listeners subscribing to actions from parent\n *\n * When the action handler handles as action, it returns `true`, otherwise `false`.\n */\nexport default function useOnAction({\n  router,\n  getState,\n  setState,\n  key,\n  actionListeners,\n  beforeRemoveListeners,\n  routerConfigOptions,\n  emitter,\n}: Options) {\n  const {\n    onAction: onActionParent,\n    onRouteFocus: onRouteFocusParent,\n    addListener: addListenerParent,\n    onDispatchAction,\n  } = React.useContext(NavigationBuilderContext);\n\n  const routerConfigOptionsRef = React.useRef<RouterConfigOptions>(\n    routerConfigOptions\n  );\n\n  React.useEffect(() => {\n    routerConfigOptionsRef.current = routerConfigOptions;\n  });\n\n  const onAction = React.useCallback(\n    (\n      action: NavigationAction,\n      visitedNavigators: Set<string> = new Set<string>()\n    ) => {\n      const state = getState();\n\n      // Since actions can bubble both up and down, they could come to the same navigator again\n      // We keep track of navigators which have already tried to handle the action and return if it's already visited\n      if (visitedNavigators.has(state.key)) {\n        return false;\n      }\n\n      visitedNavigators.add(state.key);\n\n      if (typeof action.target !== 'string' || action.target === state.key) {\n        let result = router.getStateForAction(\n          state,\n          action,\n          routerConfigOptionsRef.current\n        );\n\n        // If a target is specified and set to current navigator, the action shouldn't bubble\n        // So instead of `null`, we use the state object for such cases to signal that action was handled\n        result =\n          result === null && action.target === state.key ? state : result;\n\n        if (result !== null) {\n          onDispatchAction(action, state === result);\n\n          if (state !== result) {\n            const isPrevented = shouldPreventRemove(\n              emitter,\n              beforeRemoveListeners,\n              state.routes,\n              result.routes,\n              action\n            );\n\n            if (isPrevented) {\n              return true;\n            }\n\n            setState(result);\n          }\n\n          if (onRouteFocusParent !== undefined) {\n            // Some actions such as `NAVIGATE` also want to bring the navigated route to focus in the whole tree\n            // This means we need to focus all of the parent navigators of this navigator as well\n            const shouldFocus = router.shouldActionChangeFocus(action);\n\n            if (shouldFocus && key !== undefined) {\n              onRouteFocusParent(key);\n            }\n          }\n\n          return true;\n        }\n      }\n\n      if (onActionParent !== undefined) {\n        // Bubble action to the parent if the current navigator didn't handle it\n        if (onActionParent(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      // If the action wasn't handled by current navigator or a parent navigator, let children handle it\n      for (let i = actionListeners.length - 1; i >= 0; i--) {\n        const listener = actionListeners[i];\n\n        if (listener(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    [\n      actionListeners,\n      beforeRemoveListeners,\n      emitter,\n      getState,\n      key,\n      onActionParent,\n      onDispatchAction,\n      onRouteFocusParent,\n      router,\n      setState,\n    ]\n  );\n\n  useOnPreventRemove({\n    getState,\n    emitter,\n    beforeRemoveListeners,\n  });\n\n  React.useEffect(() => addListenerParent?.('action', onAction), [\n    addListenerParent,\n    onAction,\n  ]);\n\n  return onAction;\n}\n","/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nexport default function isArrayEqual(a: any[], b: any[]) {\n  return a.length === b.length && a.every((it, index) => it === b[index]);\n}\n","import * as React from 'react';\nimport { isValidElementType } from 'react-is';\nimport {\n  CommonActions,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Router,\n  RouterFactory,\n  RouterConfigOptions,\n  PartialState,\n  NavigationAction,\n  Route,\n} from '@react-navigation/routers';\nimport NavigationStateContext from './NavigationStateContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport Screen from './Screen';\nimport useEventEmitter from './useEventEmitter';\nimport useRegisterNavigator from './useRegisterNavigator';\nimport useDescriptors from './useDescriptors';\nimport useNavigationHelpers from './useNavigationHelpers';\nimport useOnAction from './useOnAction';\nimport useFocusEvents from './useFocusEvents';\nimport useOnRouteFocus from './useOnRouteFocus';\nimport useChildListeners from './useChildListeners';\nimport useFocusedListenersChildrenAdapter from './useFocusedListenersChildrenAdapter';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOnGetState from './useOnGetState';\nimport useScheduleUpdate from './useScheduleUpdate';\nimport useCurrentRender from './useCurrentRender';\nimport isArrayEqual from './isArrayEqual';\nimport {\n  DefaultNavigatorOptions,\n  RouteConfig,\n  PrivateValueStore,\n  EventMapBase,\n  EventMapCore,\n  NavigatorScreenParams,\n} from './types';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype NavigatorRoute<State extends NavigationState> = {\n  key: string;\n  params?: NavigatorScreenParams<ParamListBase, State>;\n};\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = <\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>(\n  children: React.ReactNode\n) => {\n  const configs = React.Children.toArray(children).reduce<\n    RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>[]\n  >((acc, child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n        acc.push(\n          child.props as RouteConfig<\n            ParamListBase,\n            string,\n            State,\n            ScreenOptions,\n            EventMap\n          >\n        );\n        return acc;\n      }\n\n      if (child.type === React.Fragment) {\n        // When we encounter a fragment, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(\n          ...getRouteConfigsFromChildren<State, ScreenOptions, EventMap>(\n            child.props.children\n          )\n        );\n        return acc;\n      }\n    }\n\n    throw new Error(\n      `A navigator can only contain 'Screen' components as its direct children (found ${\n        React.isValidElement(child)\n          ? `'${\n              typeof child.type === 'string' ? child.type : child.type?.name\n            }'${\n              child.props?.name ? ` for the screen '${child.props.name}'` : ''\n            }`\n          : typeof child === 'object'\n          ? JSON.stringify(child)\n          : `'${String(child)}'`\n      }). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`\n    );\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach((config) => {\n      const { name, children, component, getComponent } = config;\n\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\n          `Got an invalid name (${JSON.stringify(\n            name\n          )}) for the screen. It must be a non-empty string.`\n        );\n      }\n\n      if (\n        children != null ||\n        component !== undefined ||\n        getComponent !== undefined\n      ) {\n        if (children != null && component !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && typeof children !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`\n          );\n        }\n\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(\n            `Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`\n          );\n        }\n\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`\n          );\n        }\n\n        if (typeof component === 'function' && component.name === 'component') {\n          // Inline anonymous functions passed in the `component` prop will have the name of the prop\n          // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n          // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n          console.warn(\n            `Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`\n          );\n        }\n      } else {\n        throw new Error(\n          `Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`\n        );\n      }\n    });\n  }\n\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport default function useNavigationBuilder<\n  State extends NavigationState,\n  RouterOptions extends DefaultRouterOptions,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>(\n  createRouter: RouterFactory<State, any, RouterOptions>,\n  options: DefaultNavigatorOptions<ScreenOptions> & RouterOptions\n) {\n  const navigatorKey = useRegisterNavigator();\n\n  const route = React.useContext(NavigationRouteContext) as\n    | NavigatorRoute<State>\n    | undefined;\n\n  const { children, ...rest } = options;\n  const { current: router } = React.useRef<Router<State, any>>(\n    createRouter({\n      ...((rest as unknown) as RouterOptions),\n      ...(route?.params &&\n      route.params.state == null &&\n      route.params.initial !== false &&\n      typeof route.params.screen === 'string'\n        ? { initialRouteName: route.params.screen }\n        : null),\n    })\n  );\n\n  const routeConfigs = getRouteConfigsFromChildren<\n    State,\n    ScreenOptions,\n    EventMap\n  >(children);\n\n  const screens = routeConfigs.reduce<\n    Record<\n      string,\n      RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>\n    >\n  >((acc, config) => {\n    if (config.name in acc) {\n      throw new Error(\n        `A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.name}')`\n      );\n    }\n\n    acc[config.name] = config;\n    return acc;\n  }, {});\n\n  const routeNames = routeConfigs.map((config) => config.name);\n  const routeParamList = routeNames.reduce<Record<string, object | undefined>>(\n    (acc, curr) => {\n      const { initialParams } = screens[curr];\n      const initialParamsFromParams =\n        route?.params?.state == null &&\n        route?.params?.initial !== false &&\n        route?.params?.screen === curr\n          ? route.params.params\n          : undefined;\n\n      acc[curr] =\n        initialParams !== undefined || initialParamsFromParams !== undefined\n          ? {\n              ...initialParams,\n              ...initialParamsFromParams,\n            }\n          : undefined;\n\n      return acc;\n    },\n    {}\n  );\n  const routeGetIdList = routeNames.reduce<\n    RouterConfigOptions['routeGetIdList']\n  >(\n    (acc, curr) =>\n      Object.assign(acc, {\n        [curr]: screens[curr].getId,\n      }),\n    {}\n  );\n\n  if (!routeNames.length) {\n    throw new Error(\n      \"Couldn't find any screens for the navigator. Have you defined any screens as its children?\"\n    );\n  }\n\n  const isStateValid = React.useCallback(\n    (state) => state.type === undefined || state.type === router.type,\n    [router.type]\n  );\n\n  const isStateInitialized = React.useCallback(\n    (state) =>\n      state !== undefined && state.stale === false && isStateValid(state),\n    [isStateValid]\n  );\n\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState,\n    setKey,\n    getKey,\n    getIsInitial,\n  } = React.useContext(NavigationStateContext);\n\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if (\n      (currentState === undefined || !isStateValid(currentState)) &&\n      route?.params?.state == null\n    ) {\n      return [\n        router.getInitialState({\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        }),\n        true,\n      ];\n    } else {\n      return [\n        router.getRehydratedState(\n          route?.params?.state ?? (currentState as PartialState<State>),\n          {\n            routeNames,\n            routeParamList,\n            routeGetIdList,\n          }\n        ),\n        false,\n      ];\n    }\n    // We explicitly don't include routeNames/routeParamList in the dep list\n    // below. We want to avoid forcing a new state to be calculated in cases\n    // where routeConfigs change without affecting routeNames/routeParamList.\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n\n  let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initalized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedState as State);\n\n  let nextState: State = state;\n\n  if (!isArrayEqual(state.routeNames, routeNames)) {\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = router.getStateForRouteNamesChange(state, {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n    });\n  }\n\n  const previousNestedParamsRef = React.useRef(route?.params);\n\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route?.params;\n  }, [route?.params]);\n\n  if (route?.params) {\n    const previousParams = previousNestedParamsRef.current;\n\n    let action: CommonActions.Action | undefined;\n\n    if (\n      typeof route.params.state === 'object' &&\n      route.params.state != null &&\n      route.params.state !== previousParams?.state\n    ) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (\n      typeof route.params.screen === 'string' &&\n      ((route.params.initial === false && isFirstStateInitialization) ||\n        route.params !== previousParams)\n    ) {\n      // FIXME: Since params are merged, `route.params.params` might contain params from an older route\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate(route.params.screen, route.params.params);\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action\n      ? router.getStateForAction(nextState, action, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : null;\n\n    nextState =\n      updatedState !== null\n        ? router.getRehydratedState(updatedState, {\n            routeNames,\n            routeParamList,\n            routeGetIdList,\n          })\n        : nextState;\n  }\n\n  const shouldUpdate = state !== nextState;\n\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n\n  React.useEffect(() => {\n    setKey(navigatorKey);\n\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      // We do it in a timeout because we need to detect if another navigator mounted in the meantime\n      // For example, if another navigator has started rendering, we should skip cleanup\n      // Otherwise, our cleanup step will cleanup state for the other navigator and re-initialize it\n      setTimeout(() => {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setState(undefined);\n        }\n      }, 0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // We initialize this ref here to avoid a new getState getting initialized\n  // whenever initializedState changes. We want getState to have access to the\n  // latest initializedState, but don't need it to change when that happens\n  const initializedStateRef = React.useRef<State>();\n  initializedStateRef.current = initializedState;\n\n  const getState = React.useCallback((): State => {\n    const currentState = getCurrentState();\n\n    return isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedStateRef.current as State);\n  }, [getCurrentState, isStateInitialized]);\n\n  const emitter = useEventEmitter<EventMapCore<State>>((e) => {\n    let routeNames = [];\n\n    let route: Route<string> | undefined;\n\n    if (e.target) {\n      route = state.routes.find((route) => route.key === e.target);\n\n      if (route?.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(\n        ...Object.keys(screens).filter((name) => route?.name === name)\n      );\n    }\n\n    if (route == null) {\n      return;\n    }\n\n    const navigation = descriptors[route.key].navigation;\n\n    const listeners = ([] as (((e: any) => void) | undefined)[])\n      .concat(\n        ...routeNames.map((name) => {\n          const { listeners } = screens[name];\n          const map =\n            typeof listeners === 'function'\n              ? listeners({ route: route as any, navigation })\n              : listeners;\n\n          return map\n            ? Object.keys(map)\n                .filter((type) => type === e.type)\n                .map((type) => map?.[type])\n            : undefined;\n        })\n      )\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n\n    listeners.forEach((listener) => listener?.(e));\n  });\n\n  useFocusEvents({ state, emitter });\n\n  React.useEffect(() => {\n    emitter.emit({ type: 'state', data: { state } });\n  }, [emitter, state]);\n\n  const { listeners: childListeners, addListener } = useChildListeners();\n\n  const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route?.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n    },\n    emitter,\n  });\n\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route?.key,\n    getState,\n    setState,\n  });\n\n  const navigation = useNavigationHelpers<\n    State,\n    ActionHelpers,\n    NavigationAction,\n    EventMap\n  >({\n    onAction,\n    getState,\n    emitter,\n    router,\n  });\n\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus,\n  });\n\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState,\n  });\n\n  const descriptors = useDescriptors<State, ScreenOptions, EventMap>({\n    state,\n    screens,\n    navigation,\n    screenOptions: options.screenOptions,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    emitter,\n  });\n\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors,\n  });\n\n  return {\n    state,\n    navigation,\n    descriptors,\n  };\n}\n","import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n","import * as React from 'react';\nimport type { NavigationState } from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport type { EventMapCore } from './types';\n\ntype Options<State extends NavigationState> = {\n  state: State;\n  emitter: NavigationEventEmitter<EventMapCore<State>>;\n};\n\n/**\n * Hook to take care of emitting `focus` and `blur` events.\n */\nexport default function useFocusEvents<State extends NavigationState>({\n  state,\n  emitter,\n}: Options<State>) {\n  const navigation = React.useContext(NavigationContext);\n  const lastFocusedKeyRef = React.useRef<string | undefined>();\n\n  const currentFocusedKey = state.routes[state.index].key;\n\n  // When the parent screen changes its focus state, we also need to change child's focus\n  // Coz the child screen can't be focused if the parent screen is out of focus\n  React.useEffect(\n    () =>\n      navigation?.addListener('focus', () => {\n        lastFocusedKeyRef.current = currentFocusedKey;\n        emitter.emit({ type: 'focus', target: currentFocusedKey });\n      }),\n    [currentFocusedKey, emitter, navigation]\n  );\n\n  React.useEffect(\n    () =>\n      navigation?.addListener('blur', () => {\n        lastFocusedKeyRef.current = undefined;\n        emitter.emit({ type: 'blur', target: currentFocusedKey });\n      }),\n    [currentFocusedKey, emitter, navigation]\n  );\n\n  React.useEffect(() => {\n    const lastFocusedKey = lastFocusedKeyRef.current;\n\n    lastFocusedKeyRef.current = currentFocusedKey;\n\n    // We wouldn't have `lastFocusedKey` on initial mount\n    // Fire focus event for the current route on mount if there's no parent navigator\n    if (lastFocusedKey === undefined && !navigation) {\n      emitter.emit({ type: 'focus', target: currentFocusedKey });\n    }\n\n    // We should only emit events when the focused key changed and navigator is focused\n    // When navigator is not focused, screens inside shouldn't receive focused status either\n    if (\n      lastFocusedKey === currentFocusedKey ||\n      !(navigation ? navigation.isFocused() : true)\n    ) {\n      return;\n    }\n\n    if (lastFocusedKey === undefined) {\n      // Only fire events after initial mount\n      return;\n    }\n\n    emitter.emit({ type: 'blur', target: lastFocusedKey });\n    emitter.emit({ type: 'focus', target: currentFocusedKey });\n  }, [currentFocusedKey, emitter, navigation]);\n}\n","import * as React from 'react';\nimport type {\n  NavigationAction,\n  NavigationState,\n  Router,\n} from '@react-navigation/routers';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n\ntype Options<Action extends NavigationAction> = {\n  router: Router<NavigationState, Action>;\n  getState: () => NavigationState;\n  setState: (state: NavigationState) => void;\n  key?: string;\n};\n\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\nexport default function useOnRouteFocus<Action extends NavigationAction>({\n  router,\n  getState,\n  key: sourceRouteKey,\n  setState,\n}: Options<Action>) {\n  const { onRouteFocus: onRouteFocusParent } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  return React.useCallback(\n    (key: string) => {\n      const state = getState();\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (result !== state) {\n        setState(result);\n      }\n\n      if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n        onRouteFocusParent(sourceRouteKey);\n      }\n    },\n    [getState, onRouteFocusParent, router, setState, sourceRouteKey]\n  );\n}\n","import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport NavigationBuilderContext, {\n  FocusedNavigationCallback,\n  FocusedNavigationListener,\n} from './NavigationBuilderContext';\nimport type { NavigationHelpers } from './types';\n\ntype Options = {\n  navigation: NavigationHelpers<ParamListBase>;\n  focusedListeners: FocusedNavigationListener[];\n};\n\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter({\n  navigation,\n  focusedListeners,\n}: Options) {\n  const { addListener } = React.useContext(NavigationBuilderContext);\n\n  const listener = React.useCallback(\n    (callback: FocusedNavigationCallback<any>) => {\n      if (navigation.isFocused()) {\n        for (const listener of focusedListeners) {\n          const { handled, result } = listener(callback);\n\n          if (handled) {\n            return { handled, result };\n          }\n        }\n\n        return { handled: true, result: callback(navigation) };\n      } else {\n        return { handled: false, result: null };\n      }\n    },\n    [focusedListeners, navigation]\n  );\n\n  React.useEffect(() => addListener?.('focus', listener), [\n    addListener,\n    listener,\n  ]);\n}\n","import * as React from 'react';\nimport type { NavigationState } from '@react-navigation/routers';\nimport NavigationBuilderContext, {\n  GetStateListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport isArrayEqual from './isArrayEqual';\n\ntype Options = {\n  getState: () => NavigationState;\n  getStateListeners: Record<string, GetStateListener | undefined>;\n};\n\nexport default function useOnGetState({\n  getState,\n  getStateListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map((route) => {\n      const childState = getStateListeners[route.key]?.();\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return { ...route, state: childState };\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return { ...state, routes };\n  }, [getState, getStateListeners]);\n\n  React.useEffect(() => {\n    return addKeyedListener?.('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n","import * as React from 'react';\nimport type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type { Descriptor, NavigationHelpers } from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: {\n    [key: string]: Descriptor<ParamListBase, string, NavigationState, object>;\n  };\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n","import * as React from 'react';\nimport {\n  BaseNavigationContainer,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport ThemeProvider from './theming/ThemeProvider';\nimport DefaultTheme from './theming/DefaultTheme';\nimport LinkingContext from './LinkingContext';\nimport useThenable from './useThenable';\nimport useLinking from './useLinking';\nimport useDocumentTitle from './useDocumentTitle';\nimport useBackButton from './useBackButton';\nimport type { Theme, LinkingOptions, DocumentTitleOptions } from './types';\n\ntype Props = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props,\n  ref?: React.Ref<NavigationContainerRef | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  const refContainer = React.useRef<NavigationContainerRef>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n});\n\nexport default NavigationContainer;\n","import * as React from 'react';\nimport type { NavigationContainerRef } from '@react-navigation/core';\nimport type { DocumentTitleOptions } from './types';\n\n/**\n * Set the document title for the active screen\n */\nexport default function useDocumentTitle(\n  ref: React.RefObject<NavigationContainerRef>,\n  {\n    enabled = true,\n    formatter = (options, route) => options?.title ?? route?.name,\n  }: DocumentTitleOptions = {}\n) {\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const navigation = ref.current;\n\n    if (navigation) {\n      const title = formatter(\n        navigation.getCurrentOptions(),\n        navigation.getCurrentRoute()\n      );\n\n      document.title = title;\n    }\n\n    return navigation?.addListener('options', (e) => {\n      const title = formatter(e.data.options, navigation?.getCurrentRoute());\n\n      document.title = title;\n    });\n  });\n}\n","import * as React from 'react';\n\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\n  const [promise] = React.useState(create);\n\n  let initialState: [boolean, T | undefined] = [false, undefined];\n\n  // Check if our thenable is synchronous\n  promise.then((result) => {\n    initialState = [true, result];\n  });\n\n  const [state, setState] = React.useState(initialState);\n  const [resolved] = state;\n\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n\n  return state;\n}\n","import * as React from 'react';\n\nconst UNINTIALIZED_STATE = {};\n\n/**\n * This is definitely not compatible with concurrent mode, but we don't have a solution for sync state yet.\n */\nexport default function useSyncState<T>(initialState?: (() => T) | T) {\n  const stateRef = React.useRef<T>(UNINTIALIZED_STATE as any);\n  const isSchedulingRef = React.useRef(false);\n  const isMountedRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  if (stateRef.current === UNINTIALIZED_STATE) {\n    stateRef.current =\n      // @ts-expect-error: initialState is a function, but TypeScript doesn't think so\n      typeof initialState === 'function' ? initialState() : initialState;\n  }\n\n  const [trackingState, setTrackingState] = React.useState(stateRef.current);\n\n  const getState = React.useCallback(() => stateRef.current, []);\n\n  const setState = React.useCallback((state: T) => {\n    if (state === stateRef.current || !isMountedRef.current) {\n      return;\n    }\n\n    stateRef.current = state;\n\n    if (!isSchedulingRef.current) {\n      setTrackingState(state);\n    }\n  }, []);\n\n  const scheduleUpdate = React.useCallback((callback: () => void) => {\n    isSchedulingRef.current = true;\n\n    try {\n      callback();\n    } finally {\n      isSchedulingRef.current = false;\n    }\n  }, []);\n\n  const flushUpdates = React.useCallback(() => {\n    if (!isMountedRef.current) {\n      return;\n    }\n\n    // Make sure that the tracking state is up-to-date.\n    // We call it unconditionally, but React should skip the update if state is unchanged.\n    setTrackingState(stateRef.current);\n  }, []);\n\n  // If we're rendering and the tracking state is out of date, update it immediately\n  // This will make sure that our updates are applied as early as possible.\n  if (trackingState !== stateRef.current) {\n    setTrackingState(stateRef.current);\n  }\n\n  const state = stateRef.current;\n\n  React.useDebugValue(state);\n\n  return [state, getState, setState, scheduleUpdate, flushUpdates] as const;\n}\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","import { EdgeInsets, Metrics } from './SafeArea.types';\n\nexport const initialWindowMetrics: Metrics | null = null;\n\n/**\n * @deprecated\n */\nexport const initialWindowSafeAreaInsets: EdgeInsets | null = null;\n","import * as React from 'react';\nimport {\n  SafeAreaProvider,\n  SafeAreaConsumer,\n  initialWindowSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport {\n  getStatusBarHeight,\n  getBottomSpace,\n} from 'react-native-iphone-x-helper';\n\n// The provider component for safe area initializes asynchornously\n// Until the insets are available, there'll be blank screen\n// To avoid the blank screen, we specify some initial values\nexport const initialSafeAreaInsets = {\n  // Approximate values which are good enough for most cases\n  top: getStatusBarHeight(true),\n  bottom: getBottomSpace(),\n  right: 0,\n  left: 0,\n  // If we are on a newer version of the library, we can get the correct window insets\n  // The component might not be filling the window, but this is good enough for most cases\n  ...initialWindowSafeAreaInsets,\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default function SafeAreaProviderCompat({ children }: Props) {\n  return (\n    <SafeAreaConsumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return children;\n        }\n\n        return (\n          <SafeAreaProvider initialSafeAreaInsets={initialSafeAreaInsets}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaConsumer>\n  );\n}\n","import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  Screen,\n  screensEnabled,\n  // @ts-ignore\n  shouldUseActivityState,\n} from 'react-native-screens';\n\ntype Props = {\n  isVisible: boolean;\n  children: React.ReactNode;\n  enabled: boolean;\n  style?: any;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene({\n  isVisible,\n  children,\n  style,\n  ...rest\n}: Props) {\n  // react-native-screens is buggy on web\n  if (screensEnabled?.() && Platform.OS !== 'web') {\n    if (shouldUseActivityState) {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screen activityState={isVisible ? 2 : 0} style={style} {...rest}>\n          {children}\n        </Screen>\n      );\n    } else {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screen active={isVisible ? 1 : 0} style={style} {...rest}>\n          {children}\n        </Screen>\n      );\n    }\n  }\n\n  if (Platform.OS === 'web') {\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!isVisible}\n        style={[\n          { display: isVisible ? 'flex' : 'none' },\n          styles.container,\n          style,\n        ]}\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, style]}\n      // box-none doesn't seem to work properly on Android\n      pointerEvents={isVisible ? 'auto' : 'none'}\n    >\n      <View\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' ? !isVisible : true\n        }\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        style={isVisible ? styles.attached : styles.detached}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport { useTheme } from '@react-navigation/native';\n\ntype Props = {\n  /**\n   * Whether the badge is visible\n   */\n  visible: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  /**\n   * Style object for the tab bar container.\n   */\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function Badge({\n  visible = true,\n  size = 18,\n  children,\n  style,\n  ...rest\n}: Props) {\n  const [opacity] = React.useState(() => new Animated.Value(visible ? 1 : 0));\n  const [rendered, setRendered] = React.useState(visible ? true : false);\n\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (!rendered) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished && !visible) {\n        setRendered(false);\n      }\n    });\n  }, [opacity, rendered, visible]);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  if (!visible && !rendered) {\n    return null;\n  }\n\n  // @ts-expect-error: backgroundColor definitely exists\n  const { backgroundColor = theme.colors.notification, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor = color(backgroundColor).isLight() ? 'black' : 'white';\n\n  const borderRadius = size / 2;\n  const fontSize = Math.floor((size * 3) / 4);\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          transform: [\n            {\n              scale: opacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0.5, 1],\n              }),\n            },\n          ],\n          backgroundColor,\n          color: textColor,\n          fontSize,\n          lineHeight: size - 1,\n          height: size,\n          minWidth: size,\n          borderRadius,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport type { Route } from '@react-navigation/native';\nimport Badge from './Badge';\n\ntype Props = {\n  route: Route<string>;\n  horizontal: boolean;\n  badge?: string | number;\n  badgeStyle?: StyleProp<TextStyle>;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor: string;\n  inactiveTintColor: string;\n  renderIcon: (props: {\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  horizontal,\n  badge,\n  badgeStyle,\n  activeOpacity,\n  inactiveOpacity,\n  activeTintColor,\n  inactiveTintColor,\n  renderIcon,\n  style,\n}: Props) {\n  const size = 25;\n\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View\n      style={[horizontal ? styles.iconHorizontal : styles.iconVertical, style]}\n    >\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\n        {renderIcon({\n          focused: true,\n          size,\n          color: activeTintColor,\n        })}\n      </View>\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\n        {renderIcon({\n          focused: false,\n          size,\n          color: inactiveTintColor,\n        })}\n      </View>\n      <Badge\n        visible={badge != null}\n        style={[\n          styles.badge,\n          horizontal ? styles.badgeHorizontal : styles.badgeVertical,\n          badgeStyle,\n        ]}\n        size={(size * 3) / 4}\n      >\n        {badge}\n      </Badge>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3,\n  },\n  badge: {\n    position: 'absolute',\n    left: 3,\n  },\n  badgeVertical: {\n    top: 3,\n  },\n  badgeHorizontal: {\n    top: 7,\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  Platform,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  GestureResponderEvent,\n} from 'react-native';\nimport { Link, Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\n\nimport TabBarIcon from './TabBarIcon';\nimport type { BottomTabBarButtonProps, LabelPosition } from '../types';\n\ntype Props = {\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: {\n        focused: boolean;\n        color: string;\n        position: LabelPosition;\n      }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Text to show in a badge on the tab icon.\n   */\n  badge?: number | string;\n  /**\n   * Custom style for the badge.\n   */\n  badgeStyle?: StyleProp<TextStyle>;\n  /**\n   * URL to use for the link to the tab.\n   */\n  to?: string;\n  /**\n   * The button for the tab. Uses a `TouchableWithoutFeedback` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press in React Native.\n   * On the web, this will use onClick.\n   */\n  onPress: (\n    e: React.MouseEvent<HTMLElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the icon element.\n   */\n  iconStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  label,\n  icon,\n  badge,\n  badgeStyle,\n  to,\n  button = ({\n    children,\n    style,\n    onPress,\n    to,\n    accessibilityRole,\n    ...rest\n  }: BottomTabBarButtonProps) => {\n    if (Platform.OS === 'web' && to) {\n      // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n      // We need to use `onClick` to be able to prevent default browser handling of links.\n      return (\n        <Link\n          {...rest}\n          to={to}\n          style={[styles.button, style]}\n          onPress={(e: any) => {\n            if (\n              !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n              (e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress?.(e);\n            }\n          }}\n        >\n          {children}\n        </Link>\n      );\n    } else {\n      return (\n        <TouchableWithoutFeedback\n          {...rest}\n          accessibilityRole={accessibilityRole}\n          onPress={onPress}\n        >\n          <View style={style}>{children}</View>\n        </TouchableWithoutFeedback>\n      );\n    }\n  },\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  allowFontScaling,\n  labelStyle,\n  iconStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Text>\n      );\n    }\n\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n    });\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        horizontal={horizontal}\n        badge={badge}\n        badgeStyle={badgeStyle}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={iconStyle}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    accessibilityRole: 'button',\n    accessibilityState: { selected: focused },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 10,\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3,\n  },\n  button: {\n    display: 'flex',\n  },\n});\n","import * as React from 'react';\n\nexport default React.createContext<((height: number) => void) | undefined>(\n  undefined\n);\n","import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  TabNavigationState,\n  ParamListBase,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea, EdgeInsets } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps, LabelPosition } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n  tabStyle: StyleProp<ViewStyle>;\n  labelPosition: LabelPosition | undefined;\n  adaptive: boolean | undefined;\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  layout,\n  dimensions,\n  adaptive = true,\n  labelPosition,\n  tabStyle,\n}: Options) => {\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({ dimensions, ...rest });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const topBorderWidth =\n      // @ts-ignore\n      StyleSheet.flatten([styles.tabBar, style])?.borderTopWidth;\n\n    onHeightChange?.(\n      height +\n        paddingBottom +\n        (typeof topBorderWidth === 'number' ? topBorderWidth : 0)\n    );\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    insets,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n    style,\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n","import * as React from 'react';\nimport { ScaledSize, Dimensions } from 'react-native';\n\n// This is similar to the new useWindowDimensions hook in react-native\n// However, we have a custom implementation to support older RN versions\nexport default function useWindowDimensions() {\n  const [dimensions, setDimensions] = React.useState(() => {\n    // `height` and `width` maybe undefined during SSR, so we initialize them\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    return { height, width };\n  });\n\n  React.useEffect(() => {\n    const onChange = ({ window }: { window: ScaledSize }) => {\n      const { width, height } = window;\n\n      setDimensions((d) => {\n        if (width === d.width && height === d.height) {\n          return d;\n        }\n\n        return { width, height };\n      });\n    };\n\n    // We might have missed an update before the listener was added\n    // So make sure to update the dimensions\n    onChange({ window: Dimensions.get('window') });\n\n    Dimensions.addEventListener('change', onChange);\n\n    return () => Dimensions.removeEventListener('change', onChange);\n  }, []);\n\n  return dimensions;\n}\n","import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n","import * as React from 'react';\n\nexport default React.createContext<number | undefined>(undefined);\n","import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  NavigationHelpersContext,\n  ParamListBase,\n  TabNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport { ScreenContainer } from 'react-native-screens';\n\nimport SafeAreaProviderCompat, {\n  initialSafeAreaInsets,\n} from './SafeAreaProviderCompat';\nimport ResourceSavingScene from './ResourceSavingScene';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabDescriptorMap,\n  BottomTabNavigationHelpers,\n  BottomTabBarProps,\n} from '../types';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\ntype State = {\n  loaded: string[];\n  tabBarHeight: number;\n};\n\nfunction SceneContent({\n  isFocused,\n  children,\n  style,\n}: {\n  isFocused: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      accessibilityElementsHidden={!isFocused}\n      importantForAccessibility={isFocused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.content, { backgroundColor: colors.background }, style]}\n    >\n      {children}\n    </View>\n  );\n}\n\nexport default class BottomTabView extends React.Component<Props, State> {\n  static defaultProps = {\n    lazy: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const focusedRouteKey = nextProps.state.routes[nextProps.state.index].key;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(focusedRouteKey)\n        ? prevState.loaded\n        : [...prevState.loaded, focusedRouteKey],\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { state, tabBarOptions } = this.props;\n\n    const dimensions = Dimensions.get('window');\n    const tabBarHeight = getTabBarHeight({\n      state,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: initialSafeAreaInsets,\n      adaptive: tabBarOptions?.adaptive,\n      labelPosition: tabBarOptions?.labelPosition,\n      tabStyle: tabBarOptions?.tabStyle,\n      style: tabBarOptions?.style,\n    });\n\n    this.state = {\n      loaded: [state.routes[state.index].key],\n      tabBarHeight: tabBarHeight,\n    };\n  }\n\n  private renderTabBar = () => {\n    const {\n      tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n      tabBarOptions,\n      state,\n      navigation,\n      descriptors,\n    } = this.props;\n    return tabBar({\n      ...tabBarOptions,\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation,\n    });\n  };\n\n  private handleTabBarHeightChange = (height: number) => {\n    this.setState((state) => {\n      if (state.tabBarHeight !== height) {\n        return { tabBarHeight: height };\n      }\n\n      return null;\n    });\n  };\n\n  render() {\n    const {\n      state,\n      descriptors,\n      navigation,\n      lazy,\n      detachInactiveScreens = true,\n      sceneContainerStyle,\n    } = this.props;\n    const { routes } = state;\n    const { loaded, tabBarHeight } = this.state;\n\n    return (\n      <NavigationHelpersContext.Provider value={navigation}>\n        <SafeAreaProviderCompat>\n          <ScreenContainer\n            // @ts-ignore\n            enabled={detachInactiveScreens}\n            style={styles.container}\n          >\n            {routes.map((route, index) => {\n              const descriptor = descriptors[route.key];\n              const { unmountOnBlur } = descriptor.options;\n              const isFocused = state.index === index;\n\n              if (unmountOnBlur && !isFocused) {\n                return null;\n              }\n\n              if (lazy && !loaded.includes(route.key) && !isFocused) {\n                // Don't render a screen if we've never navigated to it\n                return null;\n              }\n\n              return (\n                <ResourceSavingScene\n                  key={route.key}\n                  style={StyleSheet.absoluteFill}\n                  isVisible={isFocused}\n                  enabled={detachInactiveScreens}\n                >\n                  <SceneContent\n                    isFocused={isFocused}\n                    style={sceneContainerStyle}\n                  >\n                    <BottomTabBarHeightContext.Provider value={tabBarHeight}>\n                      {descriptor.render()}\n                    </BottomTabBarHeightContext.Provider>\n                  </SceneContent>\n                </ResourceSavingScene>\n              );\n            })}\n          </ScreenContainer>\n          <BottomTabBarHeightCallbackContext.Provider\n            value={this.handleTabBarHeightChange}\n          >\n            {this.renderTabBar()}\n          </BottomTabBarHeightCallbackContext.Provider>\n        </SafeAreaProviderCompat>\n      </NavigationHelpersContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n});\n","import * as React from 'react';\nimport {\n  useNavigationBuilder,\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  TabRouter,\n  TabRouterOptions,\n  TabNavigationState,\n  TabActionHelpers,\n  ParamListBase,\n} from '@react-navigation/native';\nimport BottomTabView from '../views/BottomTabView';\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap,\n} from '../types';\n\ntype Props = DefaultNavigatorOptions<BottomTabNavigationOptions> &\n  TabRouterOptions &\n  BottomTabNavigationConfig;\n\nfunction BottomTabNavigator({\n  initialRouteName,\n  backBehavior,\n  children,\n  screenOptions,\n  sceneContainerStyle,\n  ...rest\n}: Props) {\n  const { state, descriptors, navigation } = useNavigationBuilder<\n    TabNavigationState<ParamListBase>,\n    TabRouterOptions,\n    TabActionHelpers<ParamListBase>,\n    BottomTabNavigationOptions,\n    BottomTabNavigationEventMap\n  >(TabRouter, {\n    initialRouteName,\n    backBehavior,\n    children,\n    screenOptions,\n  });\n\n  return (\n    <BottomTabView\n      {...rest}\n      state={state}\n      navigation={navigation}\n      descriptors={descriptors}\n      sceneContainerStyle={sceneContainerStyle}\n    />\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap,\n  typeof BottomTabNavigator\n>(BottomTabNavigator);\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { NativeSafeAreaProviderProps } from './SafeArea.types';\n\n/**\n * TODO:\n * Currently insets and frame are based on the window and are not\n * relative to the provider view. This is inconsistent with iOS and Android.\n * However in most cases if the provider view covers the screen this is not\n * an issue.\n */\n\nconst CSSTransitions: Record<string, string> = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd',\n};\n\nexport default function NativeSafeAreaView({\n  children,\n  style,\n  onInsetsChange,\n}: NativeSafeAreaProviderProps) {\n  React.useEffect(() => {\n    // Skip for SSR.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const {\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n      } = window.getComputedStyle(element);\n\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0,\n      };\n      const frame = {\n        x: 0,\n        y: 0,\n        width: document.documentElement.offsetWidth,\n        height: document.documentElement.offsetHeight,\n      };\n      // @ts-ignore: missing properties\n      onInsetsChange({ nativeEvent: { insets, frame } });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n\n  return <View style={style}>{children}</View>;\n}\n\nlet _supportedTransitionEvent: string | null = null;\nfunction getSupportedTransitionEvent(): string {\n  if (_supportedTransitionEvent !== null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key as keyof CSSStyleDeclaration] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent;\n}\n\ntype CssEnv = 'constant' | 'env';\n\nlet _supportedEnv: CssEnv | null = null;\nfunction getSupportedEnv(): CssEnv {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const { CSS } = window;\n  if (\n    CSS &&\n    CSS.supports &&\n    CSS.supports('top: constant(safe-area-inset-top)')\n  ) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\n\nfunction getInset(side: string): string {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\n\nfunction createContextElement(): HTMLElement {\n  const element = document.createElement('div');\n  const { style } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}\n","import * as React from 'react';\nimport { Dimensions, StyleProp, StyleSheet, ViewStyle } from 'react-native';\nimport NativeSafeAreaProvider from './NativeSafeAreaProvider';\nimport { EdgeInsets, InsetChangedEvent, Metrics, Rect } from './SafeArea.types';\n\nexport const SafeAreaInsetsContext = React.createContext<EdgeInsets | null>(\n  null,\n);\n\nexport const SafeAreaFrameContext = React.createContext<Rect | null>(null);\n\nexport interface SafeAreaViewProps {\n  children?: React.ReactNode;\n  initialMetrics?: Metrics | null;\n  /**\n   * @deprecated\n   */\n  initialSafeAreaInsets?: EdgeInsets | null;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialMetrics,\n  initialSafeAreaInsets,\n  style,\n}: SafeAreaViewProps) {\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState<EdgeInsets | null>(\n    initialMetrics?.insets ?? initialSafeAreaInsets ?? parentInsets ?? null,\n  );\n  const [frame, setFrame] = React.useState<Rect>(\n    initialMetrics?.frame ??\n      parentFrame ?? {\n        // Backwards compat so we render anyway if we don't have frame.\n        x: 0,\n        y: 0,\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n  );\n  const onInsetsChange = React.useCallback(\n    (event: InsetChangedEvent) => {\n      const {\n        nativeEvent: { frame: nextFrame, insets: nextInsets },\n      } = event;\n\n      if (\n        // Backwards compat with old native code that won't send frame.\n        nextFrame &&\n        (nextFrame.height !== frame.height ||\n          nextFrame.width !== frame.width ||\n          nextFrame.x !== frame.x ||\n          nextFrame.y !== frame.y)\n      ) {\n        setFrame(nextFrame);\n      }\n\n      if (\n        !insets ||\n        nextInsets.bottom !== insets.bottom ||\n        nextInsets.left !== insets.left ||\n        nextInsets.right !== insets.right ||\n        nextInsets.top !== insets.top\n      ) {\n        setInsets(nextInsets);\n      }\n    },\n    [frame, insets],\n  );\n\n  return (\n    <NativeSafeAreaProvider\n      style={[styles.fill, style]}\n      onInsetsChange={onInsetsChange}\n    >\n      {insets != null ? (\n        <SafeAreaFrameContext.Provider value={frame}>\n          <SafeAreaInsetsContext.Provider value={insets}>\n            {children}\n          </SafeAreaInsetsContext.Provider>\n        </SafeAreaFrameContext.Provider>\n      ) : null}\n    </NativeSafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nfunction useParentSafeAreaInsets(): EdgeInsets | null {\n  return React.useContext(SafeAreaInsetsContext);\n}\n\nfunction useParentSafeAreaFrame(): Rect | null {\n  return React.useContext(SafeAreaFrameContext);\n}\n\nexport function useSafeAreaInsets(): EdgeInsets {\n  const safeArea = React.useContext(SafeAreaInsetsContext);\n  if (safeArea == null) {\n    throw new Error(\n      'No safe area insets value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return safeArea;\n}\n\nexport function useSafeAreaFrame(): Rect {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error(\n      'No safe area frame value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return frame;\n}\n\nexport function withSafeAreaInsets<T>(\n  WrappedComponent: React.ComponentType<T>,\n) {\n  return React.forwardRef((props: T, ref: React.Ref<T>) => (\n    <SafeAreaConsumer>\n      {(insets) => <WrappedComponent {...props} insets={insets} ref={ref} />}\n    </SafeAreaConsumer>\n  ));\n}\n\n/**\n * @deprecated\n */\nexport function useSafeArea(): EdgeInsets {\n  return useSafeAreaInsets();\n}\n\n/**\n * @deprecated\n */\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n\n/**\n * @deprecated\n */\nexport const SafeAreaContext = SafeAreaInsetsContext;\n"],"sourceRoot":""}