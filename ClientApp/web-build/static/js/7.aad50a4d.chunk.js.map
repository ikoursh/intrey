{"version":3,"sources":["src/Components/TabView.tsx"],"names":["firestore","auth","storage","MyAccount","React","lazy","Explore","DMs","createBottomTabNavigator","Navigator","Screen","BottomTabBar","navigation","state","selectedIndex","index","onSelect","navigate","routeNames","title","icon","props","name","TabView","waiting","push","getDb","then","r","getAuth","getStorage","useState","loading","setLoading","Promise","all","tabBar","component","fallback"],"mappings":"gQAuCWA,EACAC,EACAC,E,4FAnCLC,EAAYC,IAAMC,MAAK,kBAAM,iCAC7BC,EAAUF,IAAMC,MAAK,kBAAM,uDAC3BE,EAAMH,IAAMC,MAAK,kBAAM,uD,EAMDG,cAArBC,E,EAAAA,UAAWC,E,EAAAA,OAGZC,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,WAAYC,EAAd,EAAcA,MAAd,OACjB,kBAAC,mBAAD,CACIC,cAAeD,EAAME,MACrBC,SAAU,SAAAD,GAAK,OAAIH,EAAWK,SAASJ,EAAMK,WAAWH,MACxD,kBAAC,sBAAD,CAAqBI,MAAM,UAAUC,KAAM,SAACC,GAAD,OACvC,kBAAC,OAAD,OAAUA,EAAV,CAAiBC,KAAK,qBAO1B,kBAAC,sBAAD,CAAqBH,MAAM,WAAWC,KAAM,SAACC,GAAD,OACxC,kBAAC,OAAD,OAAUA,EAAV,CAAiBC,KAAK,+BAG1B,kBAAC,sBAAD,CAAqBH,MAAM,aAAaC,KAAM,SAACC,GAAD,OAC1C,kBAAC,OAAD,OAAUA,EAAV,CAAiBC,KAAK,yBAQnB,SAASC,IAEpB,IAAIC,EAAyB,GAC7BA,EAAQC,KAAKC,cAAQC,MAAK,SAACC,GAAD,OAAO5B,EAAY4B,MAC7CJ,EAAQC,KAAKI,cAAUF,MAAK,SAACC,GAAD,OAAO3B,EAAO2B,MAC1CJ,EAAQC,KAAKK,cAAaH,MAAK,SAACC,GAAD,OAAO1B,EAAU0B,MALlB,MAOAG,oBAAS,GAPT,WAOvBC,EAPuB,KAOdC,EAPc,KAS9B,OADAC,QAAQC,IAAIX,GAASG,MAAK,kBAAIM,GAAW,MACrCD,EACO,kBAAC,UAAD,MAGP,kBAAC,IAAD,KACI,kBAACvB,EAAD,CAAW2B,OAAQ,SAAAf,GAAK,OAAI,kBAACV,EAAiBU,KAC1C,kBAACX,EAAD,CAAQY,KAAM,UACNe,UAAW,kBAAO,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAAiB,kBAAChC,EAAD,UAE/D,kBAACI,EAAD,CAAQY,KAAM,WAAYe,UAAW,kBAAO,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAAiB,kBAAC/B,EAAD,UACjF,kBAACG,EAAD,CAAQY,KAAM,aACNe,UAAW,kBAAO,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAAiB,kBAACnC,EAAD","file":"static/js/7.aad50a4d.chunk.js","sourcesContent":["import React, {Suspense, useState} from 'react';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\r\nimport {BottomNavigation, BottomNavigationTab, Icon, Spinner} from '@ui-kitten/components';\r\n\r\n\r\nconst MyAccount = React.lazy(() => import(\"../Screens/MyAccount\"));\r\nconst Explore = React.lazy(() => import(\"../Screens/Explore\"));\r\nconst DMs = React.lazy(() => import(\"../Screens/DMs\"));\r\n\r\nimport SplashScreen from \"../Screens/SplashScreen\";\r\nimport firebase from \"firebase\";\r\nimport {getAuth, getStorage, getDb} from \"../firebase\";\r\n\r\nconst {Navigator, Screen} = createBottomTabNavigator();\r\n\r\n// @ts-ignore\r\nconst BottomTabBar = ({navigation, state}) => (\r\n    <BottomNavigation\r\n        selectedIndex={state.index}\r\n        onSelect={index => navigation.navigate(state.routeNames[index])}>\r\n        <BottomNavigationTab title='Explore' icon={(props) => (\r\n            <Icon {...props} name='home-outline'/>\r\n        )}/>\r\n\r\n        {/*<BottomNavigationTab title='Search' icon={(props) => (*/}\r\n        {/*    <Icon {...props} name='search-outline'/>*/}\r\n        {/*)}/>*/}\r\n\r\n        <BottomNavigationTab title='Messages' icon={(props) => (\r\n            <Icon {...props} name='message-square-outline'/>\r\n        )}/>\r\n\r\n        <BottomNavigationTab title='My Account' icon={(props) => (\r\n            <Icon {...props} name='person-outline'/>\r\n        )}/>\r\n\r\n    </BottomNavigation>\r\n);\r\nexport let firestore: firebase.firestore.Firestore;\r\nexport let auth: firebase.auth.Auth;\r\nexport let storage: firebase.storage.Storage;\r\nexport default function TabView() {\r\n    //ensure that firebase deps are loaded to prevent async hell\r\n    let waiting:Promise<any>[] = []\r\n    waiting.push(getDb().then((r) => firestore = r));\r\n    waiting.push(getAuth().then((r) => auth = r));\r\n    waiting.push(getStorage().then((r) => storage = r));\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    Promise.all(waiting).then(()=>setLoading(false))\r\n    if (loading)\r\n        return <Spinner/>\r\n\r\n    return (\r\n        <NavigationContainer>\r\n            <Navigator tabBar={props => <BottomTabBar {...props} />}>\r\n                <Screen name={\"Explore\"}\r\n                        component={() => (<Suspense fallback={<SplashScreen/>}><Explore/></Suspense>)}/>\r\n                {/*<Screen name={\"Search\"} component={Search}/>*/}\r\n                <Screen name={\"Messages\"} component={() => (<Suspense fallback={<SplashScreen/>}><DMs/></Suspense>)}/>\r\n                <Screen name={\"My Account\"}\r\n                        component={() => (<Suspense fallback={<SplashScreen/>}><MyAccount/></Suspense>)}/>\r\n            </Navigator>\r\n        </NavigationContainer>\r\n    )\r\n}"],"sourceRoot":""}