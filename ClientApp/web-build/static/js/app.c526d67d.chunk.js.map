{"version":3,"sources":["src/firebase.ts","src/Components/GoogleSignIn.tsx","src/Screens/Login.tsx","src/App.tsx","web-build/register-service-worker.js","webpack:////mnt/c/Users/ikoursh/SMSQ/index.js?d89a","src/assets/signInWithGoogle.png","src/Screens/SplashScreen.tsx"],"names":["db","auth","storage","getAuth","a","async","firebase","getDb","require","firestore","getStorage","baseApiUrl","GoogleAuthProvider","props","styles","StyleSheet","create","google","margin","width","Gwidth","height","Platform","OS","GoogleSignInMOBILE","GoogleSigninButton","style","size","Size","Wide","color","Color","Dark","onPress","GoogleSignin","configure","signIn","then","u","signInWithCredential","credential","idToken","disabled","TouchableHighlight","Alert","alert","gap","signInWithPopup","Image","source","Login","useState","email","setEmail","password","setPassword","err","setErr","win","Dimensions","get","Math","min","container","flex","justifyContent","alignItems","button","input","checkbox","backdrop","backgroundColor","category","label","accessibilityHint","autoCompleteType","onChangeText","text","secureTextEntry","createUserWithEmailAndPassword","catch","error","code","console","log","signInWithEmailAndPassword","GoogleSignIn","visible","backdropStyle","onBackdropPress","hasDbEntry","setHasDbEntry","user","setUser","theme","setTheme","SignUp","React","lazy","TabView","checkForUserDbEntry","collection","doc","uid","docSnapshot","exists","App","initializing","setInitializing","showEmailVerfReq","setShowEmailVerfReq","onAuthStateChanged","emailVerified","sendEmailVerification","signOut","useEffect","SplashScreen","fallback","setThemeSafe","dark","AsyncStorage","setItem","eva","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getItem","r","icons","EvaIconsPack","navigator","window","addEventListener","serviceWorker","register","scope","info","registerRootComponent","module","exports"],"mappings":"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","file":"static/js/app.c526d67d.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nlet db: firebase.firestore.Firestore;\r\nlet auth: firebase.auth.Auth;\r\nlet storage:firebase.storage.Storage;\r\n\r\nexport async function getAuth() {\r\n    if (auth == null){\r\n        auth = await firebase.auth();\r\n    }\r\n    return auth;\r\n}\r\n\r\nexport async function getDb() {\r\n    if (db == null){\r\n        await require('firebase/firestore');\r\n        db = firebase.firestore()\r\n    }\r\n    return db;\r\n}\r\n\r\nexport async function getStorage() {\r\n    if (storage == null){\r\n        await require('firebase/storage');\r\n        storage = firebase.storage();\r\n    }\r\n    return storage;\r\n}\r\n\r\nexport const baseApiUrl = \"https://intry.inbarkoursh.com/api\";","import React from \"react\";\r\nimport {Alert, Image, Platform, StyleSheet, TouchableHighlight} from \"react-native\";\r\nimport {auth} from \"firebase\";\r\nimport {User} from \"@react-native-community/google-signin\";\r\nconst GoogleAuthProvider = auth.GoogleAuthProvider;\r\n\r\nexport default function (props:any) {\r\n    const styles = StyleSheet.create({\r\n        google:{\r\n            margin: 5,\r\n            width: props.Gwidth,\r\n            height:props.Gwidth*0.240837,\r\n        }\r\n    });\r\n    if (Platform.OS == \"ios\" || Platform.OS==\"android\"){\r\n        const GoogleSignInMOBILE = require(\"@react-native-community/google-signin\");\r\n        const GoogleSigninButton = GoogleSignInMOBILE.GoogleSigninButton;\r\n        return <GoogleSigninButton\r\n            style={{ width: 192, height: 48 }}\r\n            size={GoogleSigninButton.Size.Wide}\r\n            color={GoogleSigninButton.Color.Dark}\r\n            onPress={()=>{\r\n                GoogleSignInMOBILE.GoogleSignin.configure();\r\n                GoogleSignInMOBILE.GoogleSignin.signIn().then((u:User)=>{\r\n                    return auth().signInWithCredential(auth.GoogleAuthProvider.credential(u.idToken));\r\n                })\r\n            }}\r\n            disabled={props.disabled}\r\n        />\r\n    }\r\n    return (\r\n        <TouchableHighlight onPress={() => {\r\n            if (!props.disabled){\r\n                const gap = new GoogleAuthProvider();\r\n                auth().signInWithPopup(gap);\r\n            }\r\n            else {Alert.alert(\"Please accept the terms and conditions first\")}\r\n        }}>\r\n            <Image style={styles.google} source={require('../assets/signInWithGoogle.png')}/>\r\n        </TouchableHighlight>\r\n\r\n    )\r\n}\r\n\r\n","import {auth} from \"firebase\";\r\nimport React, {useState} from 'react';\r\nimport {Dimensions, StyleSheet} from \"react-native\";\r\nimport {Button, Card, CheckBox, Divider, Input, Layout, Modal, Text} from \"@ui-kitten/components\";\r\nimport GoogleSignIn from \"../Components/GoogleSignIn\";\r\n\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [err, setErr] = useState<string | null>(null);\r\n    const win = Dimensions.get('window');\r\n    const width = Math.min(win.width * 0.8, 500), height = 50;\r\n    const Gwidth = Math.min(0.8 * width, 150);\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1, justifyContent: 'center', alignItems: 'center'\r\n        },\r\n        button: {\r\n            margin: 5,\r\n            width: width,\r\n            height: height,\r\n        },\r\n        google: {\r\n            margin: 5,\r\n            width: Gwidth,\r\n            height: Gwidth * 0.240837,\r\n        },\r\n        input: {\r\n            width: width,\r\n            height: height,\r\n            margin: 10\r\n        },\r\n        checkbox: {\r\n            margin: 10,\r\n        },\r\n        backdrop: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        },\r\n\r\n    });\r\n\r\n\r\n    return (<Layout style={styles.container}>\r\n        <Text category={\"h1\"}>Login / Sign Up</Text>\r\n        <Input label={\"Email\"} style={styles.input} accessibilityHint={\"Email\"} autoCompleteType={\"email\"}\r\n               onChangeText={(text) => setEmail(text)}/>\r\n\r\n        <Input label={\"Password\"} style={styles.input} accessibilityHint={\"Password\"} secureTextEntry={true}\r\n               autoCompleteType={\"password\"}\r\n               onChangeText={(text) => setPassword(text)}/>\r\n\r\n        <Button style={styles.button} onPress={() => {\r\n\r\n            auth()\r\n                .createUserWithEmailAndPassword(email, password)\r\n                .catch(error => {\r\n\r\n                    switch (error.code) {\r\n                        case 'auth/user-disabled':\r\n                        case 'auth/operation-not-allowed':\r\n\r\n                            setErr(\"Account suspended\");\r\n                            //TODO: handel account suspension\r\n                            break;\r\n\r\n                        case 'auth/weak-password':\r\n                            setErr(\"Weak Password\",);\r\n                            break;\r\n                        case \"auth/invalid-email\":\r\n                            setErr(\"Invalid Email\");\r\n                            break;\r\n\r\n                        case \"auth/email-already-in-use\":\r\n                            setErr(\"Email already in use\");\r\n                            break;\r\n\r\n                        default:\r\n                            setErr(`Error ${error.code}`);\r\n                            console.log(error.code);\r\n                            break;\r\n                    }\r\n\r\n                });\r\n\r\n        }}>Sign Up</Button>\r\n        <Button\r\n            style={styles.button} onPress={() => {\r\n\r\n            auth()\r\n                .signInWithEmailAndPassword(email, password)\r\n                .catch(error => {\r\n\r\n                    switch (error.code) {\r\n                        case 'auth/user-disabled':\r\n\r\n                            setErr(\"Account suspended\",);//\"If you think this is a mistake, please contact support.\"\r\n                            //TODO: handel account suspension\r\n                            break;\r\n\r\n                        case 'auth/user-not-found':\r\n                            setErr(\"User Not Found\");//\"Try signing up instead\"\r\n                            break;\r\n                        case \"auth/wrong-password\":\r\n                            setErr(\"wrong password\");\r\n                            break;\r\n                        case \"auth/invalid-email\":\r\n                            setErr(\"Invalid Email\");\r\n                            break;\r\n\r\n                        default:\r\n                            setErr(`Error: ${error.code}`);\r\n                            console.log(error.code);\r\n                            break;\r\n                    }\r\n\r\n                });\r\n\r\n        }}>Log In </Button>\r\n\r\n        <Divider/>\r\n\r\n        <GoogleSignIn  Gwidth={Gwidth}/>\r\n\r\n\r\n        <Modal\r\n            visible={err != null}\r\n            backdropStyle={styles.backdrop}\r\n            onBackdropPress={() => setErr(null)}>\r\n            <Card disabled={true}>\r\n                <Text category={\"h4\"}>{err ?? \"\"}</Text>\r\n                <Button onPress={() => setErr(null)}>\r\n                    Dismiss\r\n                </Button>\r\n            </Card>\r\n        </Modal>\r\n    </Layout>);\r\n}\r\n\r\n\r\n","import React, {Suspense, useEffect, useState} from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport {firestore, User} from \"firebase\";\r\n\r\nimport SplashScreen from \"./Screens/SplashScreen\";\r\n\r\nimport {ApplicationProvider, Button, Card, IconRegistry, Modal, Text} from \"@ui-kitten/components\";\r\nimport * as eva from '@eva-design/eva';\r\nimport {EvaIconsPack} from \"@ui-kitten/eva-icons\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\"\r\n\r\nimport Login from \"./Screens/Login\"\r\nimport {getAuth} from \"./firebase\";\r\n\r\nconst SignUp = React.lazy(() => import(\"./Screens/SignUp\"));\r\nconst TabView = React.lazy(() => import(\"./Components/TabView\"));\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBbxrDo4__NyCEPx4E7obc1_hjTPa_lyK4\",\r\n    authDomain: \"meet-social-media-sq.firebaseapp.com\",\r\n    projectId: \"meet-social-media-sq\",\r\n    storageBucket: \"meet-social-media-sq.appspot.com\",\r\n    messagingSenderId: \"857597138191\",\r\n    appId: \"1:857597138191:web:4e77094b1b1b9179619a7a\",\r\n    measurementId: \"G-WJ37007H2T\"\r\n};\r\n\r\n\r\nif (firebase.apps.length === 0) //TODO: remove in production\r\n    firebase.initializeApp(firebaseConfig)\r\n\r\nlet hasDbEntry: boolean | null, setHasDbEntry: Function;\r\nlet user: User | null, setUser: Function;\r\n\r\n\r\nexport function checkForUserDbEntry() {\r\n    if (!user) {\r\n        setHasDbEntry(false);\r\n        return;\r\n    }\r\n    firestore().collection(\"Users\").doc(user?.uid).get()\r\n        .then((docSnapshot) => {\r\n            setHasDbEntry(docSnapshot.exists);\r\n        });\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n    const [initializing, setInitializing] = useState(true);\r\n    [user, setUser] = useState<User | null>(null);\r\n    [hasDbEntry, setHasDbEntry] = useState(null);\r\n    const [showEmailVerfReq, setShowEmailVerfReq] = useState(false);\r\n\r\n    // Handle user state changes\r\n    async function onAuthStateChanged(user: User | null) {\r\n        setUser(user);\r\n        if (initializing) setInitializing(false);\r\n        if (!(user?.emailVerified ?? false) && user) {\r\n            user?.sendEmailVerification();\r\n            (await getAuth()).signOut();\r\n            setShowEmailVerfReq(true);\r\n        } else {\r\n            console.log(\"logged in, making req to firebase\")\r\n            checkForUserDbEntry()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            (await getAuth()).onAuthStateChanged(onAuthStateChanged)\r\n        })\r\n        ();\r\n    }, []);\r\n\r\n    if (initializing) return (\r\n        <SplashScreen/>\r\n    );\r\n\r\n    if (user == null || (!user?.emailVerified ?? false)) {\r\n        return (\r\n            <Suspense fallback={<SplashScreen/>}>\r\n                <Login/>\r\n                <Modal\r\n                    visible={showEmailVerfReq}\r\n                    backdropStyle={{backgroundColor: 'rgba(0, 0, 0, 0.5)'}}\r\n                    onBackdropPress={() => setShowEmailVerfReq(false)}>\r\n                    <Card disabled={true}>\r\n                        <Text category={\"h4\"}>Please verify your email address</Text>\r\n                        <Button onPress={() => setShowEmailVerfReq(false)}>\r\n                            OK\r\n                        </Button>\r\n                    </Card>\r\n                </Modal>\r\n            </Suspense>\r\n        );\r\n    }\r\n\r\n    if (hasDbEntry == null) {\r\n        return <SplashScreen/>\r\n    }\r\n\r\n    if (!hasDbEntry) {\r\n        return (\r\n            <Suspense fallback={<SplashScreen/>}>\r\n                <SignUp/></Suspense>)\r\n    }\r\n\r\n\r\n    return (\r\n        <Suspense fallback={<SplashScreen/>}>\r\n            <TabView/></Suspense>\r\n    );\r\n}\r\n\r\nlet theme, setTheme: Function;\r\n\r\nexport function setThemeSafe(dark: boolean) {\r\n    AsyncStorage.setItem(\"theme\", dark ? \"dark\" : \"light\");\r\n    setTheme(dark ? eva.dark : eva.light);\r\n}\r\n\r\nexport default function () {\r\n    [theme, setTheme] = useState(eva.light);\r\n    const r = AsyncStorage.getItem('theme').then((r) => {\r\n        if (r != null)\r\n            setTheme(r == \"dark\" ? eva.dark : eva.light);\r\n    });\r\n    return (\r\n        <>\r\n            <IconRegistry icons={EvaIconsPack}/>\r\n            <ApplicationProvider {...eva} theme={theme}>\r\n                <App/>\r\n            </ApplicationProvider>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './src/App';\n\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n\n","module.exports = __webpack_public_path__ + \"static/media/signInWithGoogle.eb4d92af.png\";","import React from 'react';\r\nimport {Layout, Spinner} from \"@ui-kitten/components\";\r\n\r\nexport default function SplashScreen() {\r\n    return(<Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Spinner/>\r\n    </Layout>)\r\n}"],"sourceRoot":""}